start
<page number="1" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="265.533750" left="162.930000" width="1510.139475" height="28.886175" font="0">Intelligent virtualized wide-area network design with</text>
1 54 885 fontspec: HASH(0x55c432e79810), font: 0, size: 207 . Intelligent virtualized wide-area network design with
1 271 1124 fontspec: HASH(0x55c432e79810), font: 0, size: 207 . Magpie
1 187 1365 fontspec: HASH(0x55c432e18068), font: 1, size: 147 . Paper #84, 13 pages including references
1 53 1628 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . ABSTRACT
1 53 1762 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Virtual wide-area networks (WANs) are WAN-as-a-service
1 53 1882 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cloud offerings that aim to bring the performance benefits
1 53 2002 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of dedicated WAN interconnects to enterprise customers.
1 53 2121 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . In this work, we show that the
1 184 2145 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . topology
1 222 2121 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of a virtual WAN
1 53 2241 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . can render it both performance and cost inefficient. We de-
1 53 2360 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . velop Magpie, a tool that
1 162 2384 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . designs
1 195 2360 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . virtual WAN topologies
1 53 2480 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . by deciding the number of virtual WAN nodes and their lo-
1 53 2599 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cation in the cloud to minimize network latency from the
1 53 2719 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . virtual WAN at low cost to the enterprise. Magpie leverages
1 53 2838 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . millions of latency measurements from across the world to
1 53 2958 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cloud points of presence to build virtual WAN topologies
1 53 3078 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . that improve weighted client latency by 23% at 25% lower
1 53 3197 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cost to the enterprise while meeting the same service-level
1 53 3317 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . objective. Magpie-designed virtual WAN topologies offer
1 53 3436 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . sustained latency improvements over several months, easing
1 53 3556 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the complexity of operating virtual WANs in practice.
1 53 3836 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 1
1 71 3836 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . INTRODUCTION
1 53 3970 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Cloud providers spend billions of dollars to provision and op-
1 53 4090 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . erate wide-area networks (WANs) that connect their globally-
1 53 4209 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . distributed datacenters [13, 15, 22, 23]. In contrast, enter-
1 53 4329 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . prises lack the incentive and capital to acquire a dedicated
1 53 4448 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . WAN of their own. Instead, they rely on the public Inter-
1 53 4568 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . net to connect their employees and
1 209 4592 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . branch offices
1 269 4568 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in dif-
1 53 4687 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ferent parts of the world. Recently, cloud providers have
1 53 4807 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . begun to offer
1 114 4831 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . virtualized wide-area networks
1 241 4807 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to enterprise
1 53 4926 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . customers [17, 24]. Similar to virtualized compute in the
1 53 5046 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cloud [11], virtualized WANs are
1 186 5070 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . WAN-as-a-service
1 258 5046 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . offerings
1 53 5166 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . that bring the performance improvements of a dedicated
1 53 5285 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . WAN to enterprises without significant infrastructural in-
1 53 5405 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . vestment.
1 63 5524 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Fundamentally, enterprise virtualized WANs are
1 262 5548 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . network
1 53 5668 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . overlays
1 89 5644 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . [2] on the cloud that can provide fast connectivity
1 53 5763 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . between enterprise branch offices and their cloud-hosted
1 53 5883 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . resources (
1 98 5907 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . e.g.,
1 116 5883 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . mail, databases, proprietary enterprise soft-
1 53 6002 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ware). Figure 1 shows an example enterprise virtualized
1 53 6122 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . WAN topology that connects three branch offices of a multi-
1 53 6242 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . continental enterprise and its employees. The nodes of the
1 53 6361 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . virtual WAN overlay, called
1 166 6385 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . virtualized WAN hubs
1 254 6361 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (
1 257 6385 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . e.g.,
1 275 6361 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hubs
1 53 6507 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùê¥
1 60 6481 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ,
1 65 6507 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêµ
1 74 6481 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and
1 92 6507 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùê∂
1 103 6481 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in Figure 1), are network gateways providing
1 53 6600 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . regional points of connectivity into the cloud WAN.
1 63 6720 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Virtualized WANs promise improved network latency to
1 53 6839 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cloud-hosted services and between branch offices by using
1 53 6959 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the cloud WAN instead of the public Internet as the network
1 318 1613 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . interconnect. However, these latency benefits depend on the
1 318 1733 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topology of the virtual WAN
1 432 1756 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . i.e.,
1 447 1733 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the number and locations of
1 318 1852 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the WAN hubs, spawned by the enterprise. Today, enterprises
1 318 1972 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . build their virtual WAN topologies by spawning virtual hubs
1 318 2091 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in cloud datacenters nearest to their branch offices. As per
1 318 2211 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . this policy, the enterprise in Figure 1 would place the virtual
1 318 2330 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hub
1 334 2357 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùê¥
1 343 2330 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in the New York datacenter,
1 454 2357 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêµ
1 461 2330 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in the Beijing datacenter
1 318 2450 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and so on. The intuition behind this strategy is that WAN
1 318 2569 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hubs geographically closest to the branch offices are more
1 318 2689 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . likely to offer enterprise employees the lowest latency entry
1 318 2809 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . into the cloud WAN. However, these intuitive virtual WAN
1 318 2928 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . designs can perform poorly in practice since both complex
1 318 3048 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . inter-domain and cloud intra-domain phenomenon impact
1 318 3167 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the latency of an enterprise virtual WAN.
1 345 3911 fontspec: HASH(0x55c432e8ed88), font: 6, size: 73 . Branch office
1 350 3996 fontspec: HASH(0x55c432e8ed88), font: 6, size: 73 . New York
1 362 4437 fontspec: HASH(0x55c432e8ed88), font: 6, size: 73 . Branch office
1 371 4522 fontspec: HASH(0x55c432e8ed88), font: 6, size: 73 . Beijing
1 405 4774 fontspec: HASH(0x55c432e8ed88), font: 6, size: 73 . Branch office
1 410 4859 fontspec: HASH(0x55c432e8ed88), font: 6, size: 73 . Sao Paulo
1 473 3582 fontspec: HASH(0x55c432e8ed88), font: 6, size: 73 . Cloud Managed Ser
1 509 4017 fontspec: HASH(0x55c432e8ed88), font: 6, size: 73 . vices
1 403 3967 fontspec: HASH(0x55c432e8ed88), font: 6, size: 73 . Virtual Hub B
1 461 4403 fontspec: HASH(0x55c432e8ed88), font: 6, size: 73 . Virtual Hub C
1 414 3640 fontspec: HASH(0x55c432e8ed88), font: 6, size: 73 . Virtual Hub A
1 470 4658 fontspec: HASH(0x55c432e8ed88), font: 6, size: 73 . Cloud WAN
1 327 4953 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Figure 1: Virtual WANs as overlays on cloud networks.
1 318 5186 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Sub-optimal virtualized WAN topologies are a reality.
1 318 5282 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . In fact, we observed significantly degraded performance from
1 318 5401 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the virtual WAN of a large multi-continental enterprise (Fig-
1 318 5521 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ure 2) due to inefficient hub placement in the cloud network.
1 317 5640 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The enterprise client spawned a WAN hub (
1 496 5667 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùê¥
1 502 5640 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ) in the South
1 317 5760 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . American region of the cloud WAN, nearest to their branch
1 318 5879 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . office in Sao Paulo. However, the upstream Internet Service
1 318 5999 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Provider (ISP) of the Sao Paulo branch office routed the en-
1 318 6119 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . terprise traffic to an edge site in North America instead of
1 318 6238 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the edge site in South America (
1 447 6237 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ß
1 452 6238 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 2). This
1 485 6262 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . inter-domain
1 539 6238 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . rout-
1 318 6358 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ing decision inflated latency of enterprise clients since their
1 318 6477 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . traffic was routed from South America to the North Amer-
1 318 6597 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ican cloud region, only to be routed back to the WAN hub
1 318 6716 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in South America before being on its way to WAN hub in
1 318 6836 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Madrid. An alternate placement of the WAN hub (
1 524 6862 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêµ
1 530 6836 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ) in an-
1 318 6955 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . other datacenter would have resolved this latency inflation.
1 304 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 1
start
<page number="2" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="184.857051" left="161.394000" width="443.086635" height="13.688612" font="11">Submitted for review to SIGCOMM,</text>
2 53 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Submitted for review to SIGCOMM,
2 206 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . 2022
2 530 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . X.et al.
2 53 891 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Who to blame, ISP or the cloud provider?
2 242 867 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Virtual WAN
2 53 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . clients can end up with inflated latencies either due to poor
2 53 1106 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . inter-domain routing decisions made by autonomous sys-
2 53 1225 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tems (ASes) on the Internet, like the upstream ISP of the Sao
2 53 1345 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Paulo branch office in Figure 2, or due to poor
2 242 1369 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . intra-domain
2 53 1464 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . routing decisions in the cloud WAN. Enterprise clients can
2 53 1584 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . rarely influence the routing choices made either by the ISP
2 53 1704 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . or the cloud to to improve their inflated latency in a timely
2 53 1823 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . manner. In this work, we develop Magpie, a tool that en-
2 53 1943 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ables enterprise clients to
2 157 1967 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . independently
2 214 1943 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . deploy virtual WAN
2 53 2062 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topologies that achieve the best performance possible, taking
2 53 2182 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the inter- and intra-domain routing behavior as a given.
2 53 2356 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Challenges.
2 110 2332 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Designing performant virtual WAN topologies
2 53 2451 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is challenging in practice. First, designing topologies that
2 53 2571 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . avoid inflated inter-domain latency requires a
2 248 2595 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . global view
2 53 2691 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . into the
2 88 2714 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . dynamic
2 125 2691 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . network performance from various client
2 53 2810 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . locations to the cloud WAN. Second, the cost of virtual WAN
2 53 2930 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . deployments scales linearly with the size of the topology [26].
2 53 3049 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Naive virtual WAN designs can reduce the client latency
2 53 3169 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . by a brute-force placement of hubs in all datacenters of the
2 53 3288 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cloud WAN. However, such deployments can be prohibitively
2 53 3408 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . expensive for some enterprises. Finally, modifying existing
2 53 3527 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . virtual WANs to improve performance can introduce hours
2 53 3647 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of downtime for enterprise clients, making it crucial to design
2 53 3790 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . stable
2 79 3767 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topologies that offer consistently good performance
2 53 3886 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for extended periods of time despite routing dynamics.
2 53 4060 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Our contributions.
2 142 4036 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We tackle these challenges by leverag-
2 53 4156 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ing active latency measurements from metropolitan regions
2 53 4275 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (metros) across the globe to different entry points, called
2 53 4395 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . points of presence (PoP), into the cloud WAN Using these
2 53 4515 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . measurements, we quantify the potential of improving the
2 53 4634 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latency of access to virtual WAN hubs from different client
2 53 4754 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . metros (ß3). We then formulate the virtual WAN design prob-
2 53 4873 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . lem as an optimization with the goal of minimizing weighted
2 53 4993 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . branch office latency using the lowest cost virtual WAN
2 53 5112 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topology (ß4). In our design, we consider the placement of
2 53 5232 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . minimum hubs required per branch office as the lowest cost.
2 53 5351 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We show that Magpie designs virtual WAN topologies use
2 53 5471 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 25% fewer hubs than the current practice of assigning the
2 53 5590 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . closest Pop to a metro, while maintaining the enterprise‚Äôs la-
2 53 5710 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tency service level objective (SLO) (ß6). Moreover, the virtual
2 53 5830 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . WANs designed by Magpie can improve weighted latency
2 53 5949 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of enterprise clients by nearly 23% and sustain these low la-
2 53 6069 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tencies for several months in the future. Finally, we develop
2 53 6188 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . schemes for maintaining optimized virtual WAN topologies
2 53 6308 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . proposed by Magpie over time to sustain good performance
2 53 6427 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . without modifying the virtual WAN deployment (ß7).
2 63 6547 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We discuss interventions from cloud providers and ISPs
2 53 6666 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to fix performance anomalies in virtual WAN performance
2 53 6786 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (ß8) and place Magpie in the context of related work (ß9).
2 53 6930 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Ethics.
2 89 6906 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . This work does not raise any ethical concerns.
2 318 2529 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Figure
2 348 2529 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . 2:
2 360 2529 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Problematic
2 413 2529 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . virtualized
2 462 2529 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . WAN
2 488 2529 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . topology.
2 530 2529 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Dotted
2 318 2638 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . lines in the cloud network demarcate geographical regions
2 317 2748 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . (
2 320 2725 fontspec: HASH(0x55c432f346d0), font: 12, size: 90 . e.g.,
2 338 2748 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . South America, North America, West Europe). WAN
2 318 2857 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . hubs can be placed in different datacenters of the same cloud
2 318 2967 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . region
2 346 2944 fontspec: HASH(0x55c432f346d0), font: 12, size: 90 . e.g.,
2 362 2967 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . the hub in South America could be placed in the
2 318 3077 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Sao Paulo datacenter or the Lima datacenter. The solid line
2 317 3186 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . (red) shows the path responsible for inflated latency from
2 318 3296 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Sao Paulo. The dashed line shows the end-to-end path re-
2 318 3405 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . sulting from an alternate hub placement in South America.
2 318 3579 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 2
2 336 3579 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . WAN-AS-A-SERVICE
2 318 3714 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Many enterprises (
2 394 3738 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . e.g.,
2 412 3714 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . banks, retail companies) have a geo-
2 318 3833 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . distributed footprint with branch offices and stores across
2 318 3953 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the world. These offices often connect to the same global
2 318 4073 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . database to keep track of customer accounts, sales,
2 523 4096 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . etc.
2 538 4073 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Over
2 318 4192 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . time, local infrastructure at enterprise branch offices moved
2 318 4312 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to the cloud and enterprise clients had small infrastructure
2 548 4336 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . on
2 318 4455 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . premises
2 354 4431 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to access cloud-hosted applications like databases,
2 318 4551 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . mail servers,
2 374 4575 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . etc.
2 391 4551 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Moreover, enterprise clients at different
2 318 4670 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . branch offices communicate through audio/video applica-
2 318 4790 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tions, exchange local data with each other, regularly. Both
2 318 4909 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . types of communication, branch office to cloud services and
2 318 5029 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . inter-branch office used the public Internet.
2 327 5149 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The public Internet is traditionally considered less reliable
2 318 5268 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and worse in performance than dedicated
2 483 5292 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . wide-area networks
2 318 5388 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . that large cloud and Internet service providers operate. How-
2 318 5507 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ever, private WANs are billion-dollar assets consisting of
2 318 5627 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . thousands of pieces of optical and electrical equipment con-
2 318 5746 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . nected through optical fiber. Enterprises lack the incentive
2 318 5866 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and capital to connect their branch offices with a dedicated
2 317 5985 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . WAN. To bring the benefits of a dedicated WAN to enter-
2 318 6105 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . prises, cloud companies began to offer
2 474 6129 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . virtual wide-area net-
2 318 6248 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . works
2 344 6224 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . [4, 14, 17, 24]. Virtual WANs are a
2 485 6248 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . WAN-as-a-service
2 318 6344 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . offering that allows enterprises to leverage the cloud back-
2 318 6464 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . bone as the interconnect between their datacenters.
2 318 6709 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 2.1
2 345 6709 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Cloud Virtual WANs
2 318 6844 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Cloud virtual WANs are network overlays on the cloud [3]
2 317 6963 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The nodes of the overlay are called
2 456 6987 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . virtual WAN hubs
2 526 6963 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . . Virtual
2 304 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 2
start
<page number="3" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="184.857051" left="161.394000" width="751.711107" height="13.688612" font="11">Intelligent virtualized wide-area network design with Magpie</text>
3 53 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Intelligent virtualized wide-area network design with Magpie
3 387 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Submitted for review to SIGCOMM,
3 539 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . 2022
3 53 867 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . WAN hubs are network gateways that offer regional points
3 53 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of connectivity into the cloud. When spawning a virtual
3 53 1106 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . WAN deployment, enterprises decide the numbers of hubs
3 53 1225 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and their locations in the cloud WAN.
3 53 1442 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Virtual hubs.
3 116 1418 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Virtual hubs are software gateways spawned
3 53 1537 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in cloud datacenters to which branch offices send WAN data.
3 53 1657 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Traffic from enterprise branch offices to cloud-managed ser-
3 53 1776 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . vices and other branch offices transits one or more virtual
3 53 1896 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . WAN hubs. Some cloud providers allow enterprises to spec-
3 53 2015 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ify the cloud region where their virtual hub is placed, similar
3 53 2135 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to how cloud customers can choose the region in which to
3 53 2254 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . spawn virtual machine. In this work, we assume that the
3 53 2374 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cloud provider allows enterprises to specific the datacenter
3 53 2493 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (
3 56 2517 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . e.g.,
3 74 2493 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . NY) where a virtual WAN hub will be located instead
3 53 2613 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of the geographical region (
3 166 2637 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . e.g.,
3 184 2613 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . east-US).
3 63 2733 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . There are limits on how many client connections a virtual
3 53 2852 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . WAN hub can sustain. For instance, each virtual WAN hub
3 53 2972 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . can sustain hundreds of connections from enterprise clients.
3 53 3091 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Enterprises with large numbers of employees spawn propor-
3 53 3211 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tionally larger virtual WANs with more hubs. The cost of the
3 53 3330 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . virtual WAN to the enterprise customer is a linear function
3 53 3450 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of the number of WAN hubs, their uptime and the volume
3 53 3569 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of data transferred between the hubs [26].
3 53 3786 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Virtual WAN topology.
3 162 3762 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . By design, virtual WAN hubs in
3 53 3881 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the same virtual WAN deployment form a complete graph.
3 53 4001 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Therefore, the number of virtual WAN hubs and their loca-
3 53 4120 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tion in the cloud datacenters completely defines a virtual
3 53 4240 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . WAN‚Äôs topology. For example, Figure 1 shows a virtual WAN
3 53 4359 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topology with three hubs
3 158 4386 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùê¥, ùêµ, ùê∂
3 185 4359 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . .
3 53 4653 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 2.2
3 81 4653 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Virtual WAN performance
3 53 4787 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . An important feature of virtual WANs is their ability to pro-
3 53 4907 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . vide low latency access to cloud-managed services and be-
3 53 5026 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tween enterprise branch offices. There are two components
3 53 5146 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to a virtual WAN clients‚Äô latency. First, traffic experiences la-
3 53 5265 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tency traversing from the branch office to a cloud PoP. Points
3 53 5385 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of presence serve as entry points into the cloud network. The
3 53 5505 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latency of traffic from the branch office to the cloud PoP re-
3 53 5624 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . lies on inter-domain phenomenon,
3 203 5648 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . i.e.,
3 220 5624 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the network path
3 53 5744 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . selected by the upstream ISP of branch offices and subse-
3 53 5863 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . quent routing decisions made by other ISPs on the Internet.
3 53 5983 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Second, the traffic experiences latency from the cloud PoP to
3 53 6102 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the datacenter where the virtual WAN hub is located. Intra-
3 53 6222 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . domain routing decisions made by the cloud network decide
3 53 6341 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . this latency. The second portion of enterprise virtual WAN
3 53 6461 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latency is minimal due to software-defined performance-
3 53 6581 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . optimal routing implemented by cloud providers for their
3 53 6700 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . intra-domain traffic [13, 15]. For this reason, we focus on the
3 53 6820 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . inter-domain portion of enterprise client latency to improve
3 53 6939 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the performance of virtual WANs.
3 317 891 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Anycast routing to cloud PoPs.
3 457 867 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Cloud providers assign IP
3 318 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . prefixes to cloud services like virtual WAN hubs. For example,
3 318 1106 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . a set of prefixes in the cloud provider‚Äôs IP space are reserved
3 318 1225 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for virtual WAN traffic. These prefixes are announced to the
3 318 1345 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . rest of the Internet by BGP-speaking cloud edge routers at
3 318 1464 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoPs. The same set of prefixes are announced at multiple
3 318 1584 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cloud PoPs. These prefixes are said to be
3 488 1608 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . anycasted
3 532 1584 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . by the
3 318 1704 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cloud network. This allows Internet Service Providers (ISPs)
3 318 1823 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . on the Internet to select the
3 431 1847 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . best
3 450 1823 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . path to reach an anycasted
3 318 1943 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . prefix. Anycast routing has been shown to perform well is
3 318 2062 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . most cases by drawing client traffic to cloud PoPs nearest to
3 318 2182 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the client [7]. However, there are some notable exceptions.
3 318 2382 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Performance anomalies.
3 434 2358 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . In some cases, ISPs choose to
3 318 2477 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . route traffic towards anycast prefixes through longer paths
3 318 2597 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . on the Internet. These decisions can be a result of traffic
3 318 2716 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . engineering policies in the ISP network, attempts to load
3 318 2836 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . balance across multiple network links or even configuration
3 318 2955 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . errors. As a result, enterprise customers observe inflated
3 318 3075 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latencies while accessing cloud services from their branch
3 318 3194 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . offices. Figure 2 shows a real-world example of such a case.
3 317 3314 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . A multi-continental enterprise had spawned a virtual WAN
3 318 3433 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topology in a large commercial cloud network. Enterprise
3 318 3553 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . clients in the Sao Paulo branch office were observing inflated
3 318 3673 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latencies while connecting to the Madrid branch office. An
3 318 3792 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . investigation of the network paths performed by the cloud
3 318 3912 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . provider led to the realization that the enterprise branch
3 318 4031 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . office‚Äôs upstream ISP was routing their traffic to a cloud PoP
3 318 4151 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in North America. While the ISP had anycast routes to both
3 318 4270 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the South American and North American PoPs, their path
3 318 4390 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . selection algorithm chose the longer path.
3 317 4590 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Alternate placement of WAN hubs.
3 478 4566 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . If the enterprise cus-
3 318 4685 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tomer had placed their WAN hub in a different datacenter
3 318 4805 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in the same region
3 394 4829 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . i.e.,
3 410 4805 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . South America, their traffic would be
3 318 4948 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . routed around
3 376 4924 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the performance anomaly in Figure 2. Virtual
3 317 5044 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . WAN hub deployments in different parts of the cloud WAN
3 318 5163 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . use different IP address spaces. Consequently, different sets
3 318 5283 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of anycast routes are announced for virtual WAN hubs in
3 318 5403 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . different datacenters.
3 318 5680 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 2.3
3 345 5680 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Designing virtual WANs
3 318 5895 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Popular heuristics.
3 408 5871 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Enterprises have two main guidelines
3 317 5991 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . when they spawn their virtual WAN deployments. First, the
3 318 6110 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . number and types of connections (
3 459 6134 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . e.g.,
3 477 6110 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . VPN clients, branch
3 318 6230 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . office connectivity) from the enterprise to the virtual WAN
3 318 6349 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . deployment decides the lower bound on the number of hubs
3 318 6469 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . they spawn. Each WAN hub has a limit on the number of
3 318 6588 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . simultaneous connections it allows. Second, assuming phys-
3 318 6708 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ical distance as a crude proxy for network latency to cloud
3 318 6827 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoPs, enterprises often decide the location of virtual WAN
3 318 6947 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hubs based on the locations of their branch offices.
3 304 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 3
start
<page number="4" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="184.857051" left="161.394000" width="443.086635" height="13.688612" font="11">Submitted for review to SIGCOMM,</text>
4 53 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Submitted for review to SIGCOMM,
4 206 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . 2022
4 530 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . X.et al.
4 86 855 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Total samples
4 224 855 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 9,362,717
4 86 978 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Total samples of metros >1 PoP
4 224 980 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 7,206,584
4 86 1103 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Metros with 1 PoP
4 247 1103 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 166
4 86 1227 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Metros >1 PoP(s)
4 247 1227 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 154
4 108 1382 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Table 1: Analysis data summary.
4 53 1599 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Goals.
4 87 1575 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Apart from lower end-to-end latency, enterprises
4 53 1695 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . aim for low cost virtual WAN deployments. The cost of a
4 53 1814 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . virtual WAN deployment is a linear function of the number
4 53 1934 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of virtual WAN hubs in the topology, so enterprises aim to
4 53 2053 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . reduce the cost of their deployments.
4 53 2228 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Tradeoffs.
4 103 2204 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . There is a tradeoff between virtual WAN latency
4 53 2324 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and cost. The brute-force solution of the virtual WAN design
4 53 2443 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . problem places one or more WAN hub for every branch office
4 53 2563 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in datacenters at shortest latency from the branch office. This
4 53 2682 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . design can be prohibitively expensive due to a large number
4 53 2802 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of hubs in the deployment. Ideally, the solution to the virtual
4 53 2921 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . WAN design problem should explore the
4 224 2945 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . Pareto frontier
4 285 2921 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of
4 53 3041 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cost vs. performance tradeoff, allowing enterprises to get the
4 53 3161 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . best performing topology at the lowest cost.
4 53 3414 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 3
4 71 3414 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . QUANTIFYING THE OPPORTUNITY
4 53 3549 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . In this section, we quantify the potential of improving the
4 53 3669 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latency of accessing virtual WAN deployments. We perform
4 53 3788 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . this analysis for the simplest virtual WAN topology, one
4 53 3908 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . consisting of a single virtual WAN hub for an enterprise
4 53 4027 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . with one office.
4 53 4202 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Dataset.
4 94 4178 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We leverage a pipeline of latency measurements
4 53 4298 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . performed from client endpoints towards different cloud
4 53 4417 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . WAN PoPs [8]. PoPs are entry points in to the cloud WAN
4 53 4537 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (shown in Figure 2 as
4 140 4563 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùê∏
4 146 4537 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ). We aggregate the measurements to
4 53 4656 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the granularity of client metropolitan locations as sources
4 53 4776 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and cloud points of presence as destinations. We analyze
4 53 4895 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hundreds of millions of measurements per month to cloud
4 53 5015 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoPs, spanning hundreds of client metropolitan regions, each
4 53 5134 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . with thousands of latency measurements towards the cloud
4 53 5254 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . on any given day. We use data collected over a four month
4 53 5373 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . period form April ‚Äì July, 2021 in our analysis. Latencies are
4 53 5493 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . measured in milliseconds(ms). To make the dataset more
4 53 5613 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . manageable and uniform, we aggregate the samples to the
4 53 5732 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . median, 90th percentile and 95th percentile latency in each
4 53 5852 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ten minute time window between a pair of metropolitan loca-
4 53 5971 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tion and cloud PoP. An example row in the dataset contains:
4 53 6091 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . client metropolitan location and network, timestamp, cloud
4 53 6210 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoP, median, 90th percentile, and 95th percentile latencies
4 53 6330 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in the ten minute window.
4 53 6505 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Representativeness of the data.
4 199 6481 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Our dataset is represen-
4 53 6600 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tative of real client latencies to cloud PoP for three reasons.
4 53 6720 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . First, these latency measurements are gathered from the
4 53 6839 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . transfer of a small file from the cloud PoP to the client loca-
4 53 6959 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tion. Data-transfer based measurements better estimate the
4 318 867 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latency of client to cloud communication than mechanisms
4 318 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . like
4 335 1010 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . ping
4 355 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and
4 372 1010 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . traceroute
4 414 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . that use ICMP packets. ICMP traffic
4 318 1106 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is often treated differently from data packets by routers on
4 318 1225 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the path. Second, the set of clients performing these measure-
4 318 1345 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ments are already accessing services in the cloud network we
4 318 1464 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . study, making the measurement client-metro set an accurate
4 318 1584 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . reflection of the actual clients of the cloud. Due to the large
4 317 1704 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . volume of measurements and aggregation of samples into
4 318 1823 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . quantiles, our latency measurements are less noisy.
4 318 1991 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Default and non-default PoPs.
4 460 1966 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Our dataset captures la-
4 318 2086 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tency measurements to two kinds of cloud PoPs from every
4 318 2206 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . client location ‚Äî latency to the
4 443 2229 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . default
4 473 2206 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoP and latency to 2‚Äì
4 318 2325 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 3 other PoPs. Anycast routing from a client‚Äôs location steers
4 318 2445 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the traffic to the default PoP. The measurements to non-
4 318 2564 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . default or alternate PoPs in our dataset are enabled using
4 318 2684 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . special configuration at the cloud PoP [8].
4 318 2851 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Default PoP and virtual hub placement heuristic.
4 545 2827 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Ac-
4 318 2947 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cording to previous work [7], for
4 450 2946 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚âà
4 457 2947 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 90% of client prefixes, the
4 318 3066 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . anycast default PoP is also the geographically closest one.
4 317 3186 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Thus, we consider the default PoP to be the geographically
4 318 3305 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . closest PoP for client locations in our dataset. With this, we
4 318 3425 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . can construct the simplest virtual WAN topologies for the
4 318 3545 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hundreds of metropolitan locations in our dataset. These
4 318 3664 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topologies are for enterprises with one branch office in a
4 318 3784 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . metropolitan location and the corresponding virtual WAN
4 318 3903 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topology for these enterprises consists of one virtual WAN
4 318 4023 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hub deployed in a datacenter behind the nearest cloud PoP,
4 318 4142 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . as per the heuristic defined in ß2.
4 318 4310 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Mapping virtual WAN clients to PoPs not datacenters.
4 317 4405 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . While WAN hubs are placed in datacenters, it is sufficient
4 318 4525 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to measure the latency to the closest PoP, instead of the
4 318 4644 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . datacenter, for two reasons. First, the inter-domain latency
4 318 4764 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . from the client metro to the PoP dominates the overall la-
4 318 4883 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tency to the WAN hub since the network distance from PoPs
4 318 5003 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to datacenters is very short. Second, latencies from PoPs to
4 318 5123 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cloud datacenters are already minimized by software-defined
4 318 5242 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . central traffic engineering controllers [13, 15] (ß2).
4 318 5489 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 3.1
4 345 5489 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Analysis of latencies
4 317 5623 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Table 1 summarizes the details of the data over which we do
4 318 5743 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the analysis. Since our goal is to identify better performing
4 318 5863 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . alternative locations for placing a WAN hub, we focus on
4 318 5982 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . client metros that have measurements to more than one PoP.
4 318 6150 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Minimum latency to PoP.
4 437 6126 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We analyze the ratio between
4 318 6245 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . minimum latency to the default and non-default PoPs. Min-
4 318 6365 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . imum latencies allow a fairer comparison by reducing the
4 318 6484 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . effects of transient phenomenon (
4 457 6508 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . e.g.,
4 474 6484 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . congestion, queuing
4 318 6604 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . delays) on measured latency. We find the minimum latency
4 318 6723 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of the default PoP and the minimum latency among all
4 318 6843 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . non-default PoPs in a ten-minute time window for each
4 318 6962 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . client metro. Some metros have more uniform measurements
4 304 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 4
start
<page number="5" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="184.857051" left="161.394000" width="751.711107" height="13.688612" font="11">Intelligent virtualized wide-area network design with Magpie</text>
5 53 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Intelligent virtualized wide-area network design with Magpie
5 387 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Submitted for review to SIGCOMM,
5 539 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . 2022
5 93 1947 fontspec: HASH(0x55c432f34a18), font: 13, size: 57 . 2
5 120 1947 fontspec: HASH(0x55c432f34a18), font: 13, size: 57 . 1
5 145 1947 fontspec: HASH(0x55c432f34a18), font: 13, size: 57 . 0
5 172 1947 fontspec: HASH(0x55c432f34a18), font: 13, size: 57 . 1
5 199 1947 fontspec: HASH(0x55c432f34a18), font: 13, size: 57 . 2
5 81 2015 fontspec: HASH(0x55c432f34a18), font: 13, size: 57 . log10(min_latency_default/min_latency_non_default)
5 77 1859 fontspec: HASH(0x55c432f34a18), font: 13, size: 57 . 0.0
5 77 1687 fontspec: HASH(0x55c432f34a18), font: 13, size: 57 . 0.2
5 77 1515 fontspec: HASH(0x55c432f34a18), font: 13, size: 57 . 0.4
5 77 1343 fontspec: HASH(0x55c432f34a18), font: 13, size: 57 . 0.6
5 77 1172 fontspec: HASH(0x55c432f34a18), font: 13, size: 57 . 0.8
5 77 1000 fontspec: HASH(0x55c432f34a18), font: 13, size: 57 . 1.0
5 102 1015 fontspec: HASH(0x55c432f3e318), font: 15, size: 40 . p50
5 102 1071 fontspec: HASH(0x55c432f3e318), font: 15, size: 40 . p90
5 102 1128 fontspec: HASH(0x55c432f3e318), font: 15, size: 40 . p95
5 120 2178 fontspec: HASH(0x55c432f3e3f0), font: 16, size: 80 . (a) Latency ratio.
5 258 1935 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 0
5 280 1935 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 10
5 304 1935 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 20
5 328 1935 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 30
5 352 1935 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 40
5 376 1935 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 50
5 302 1997 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . No of samples
5 249 1892 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 0
5 246 1765 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 10
5 246 1638 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 20
5 246 1510 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 30
5 246 1383 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 40
5 246 1256 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 50
5 246 1128 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 60
5 246 1001 fontspec: HASH(0x55c432f3e558), font: 17, size: 50 . 70
5 374 1020 fontspec: HASH(0x55c432f3e678), font: 19, size: 37 . p50
5 374 1071 fontspec: HASH(0x55c432f3e678), font: 19, size: 37 . p90
5 374 1123 fontspec: HASH(0x55c432f3e678), font: 19, size: 37 . p95
5 248 2178 fontspec: HASH(0x55c432f3e3f0), font: 16, size: 80 . (b) Non-default count (10 minutes).
5 412 1935 fontspec: HASH(0x55c432f3e810), font: 20, size: 50 . 0
5 434 1935 fontspec: HASH(0x55c432f3e810), font: 20, size: 50 . 10
5 458 1935 fontspec: HASH(0x55c432f3e810), font: 20, size: 50 . 20
5 482 1935 fontspec: HASH(0x55c432f3e810), font: 20, size: 50 . 30
5 506 1935 fontspec: HASH(0x55c432f3e810), font: 20, size: 50 . 40
5 530 1935 fontspec: HASH(0x55c432f3e810), font: 20, size: 50 . 50
5 456 1997 fontspec: HASH(0x55c432f3e810), font: 20, size: 50 . No of samples
5 403 1892 fontspec: HASH(0x55c432f3e810), font: 20, size: 50 . 0
5 400 1693 fontspec: HASH(0x55c432f3e810), font: 20, size: 50 . 10
5 400 1493 fontspec: HASH(0x55c432f3e810), font: 20, size: 50 . 20
5 400 1293 fontspec: HASH(0x55c432f3e810), font: 20, size: 50 . 30
5 400 1093 fontspec: HASH(0x55c432f3e810), font: 20, size: 50 . 40
5 521 1020 fontspec: HASH(0x55c432f3e9d8), font: 22, size: 37 . median
5 521 1071 fontspec: HASH(0x55c432f3e9d8), font: 22, size: 37 . p90
5 521 1123 fontspec: HASH(0x55c432f3e9d8), font: 22, size: 37 . p95
5 407 2178 fontspec: HASH(0x55c432f3e3f0), font: 16, size: 80 . (c) Non-default count (24 hours).
5 53 2361 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Figure 3: 3a shows a non-default PoP performs better than a default PoP for about 20% of client metros. 3c shows the number
5 53 2470 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . of times a non-default PoP performed better than default, and 3c shows performance of non-default PoPs remain stable for
5 53 2580 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . longer timescales.
5 53 2733 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . across time and thus contribute samples for comparison in
5 53 2853 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . more ten-minute time windows than others. To prevent these
5 53 2973 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . client metros from skewing our analysis, we normalize the
5 53 3092 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . sample sizes by selecting 50 random samples across all ten-
5 53 3212 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . minute time windows for each client metro. Client metros
5 53 3331 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . with fewer than 50 samples are discarded in the comparison
5 53 3451 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . since we do not have sufficient data for them. The sampling
5 53 3570 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ensures each metro contributes an equal number of samples
5 53 3690 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for comparison and discards metros with insufficient data.
5 63 3809 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Figure 3a shows the cumulative distribution function (CDF)
5 53 3929 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of log-base 10 of the ratio of minimum latency of default
5 53 4048 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to non-default PoPs. We perform the comparison between
5 53 4169 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . default and non-default PoPs at the median, 90
5 248 4171 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùë° ‚Ñé
5 259 4169 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and 95
5 286 4171 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùë° ‚Ñé
5 53 4289 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . percentile latency computed over ten-minute time windows.
5 53 4409 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We observe that 20% of the time, placing a virtual WAN hub
5 53 4528 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . at non-default PoPs would result in better median latency
5 53 4648 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for the enterprise. The performance gap between default and
5 53 4767 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . non-default PoPs is wider at higher percentiles.
5 53 4981 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . How often was a non-default PoP better?
5 254 4957 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Figure 3b
5 53 5077 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . shows the number of times a non-default PoP was faster
5 53 5196 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . than the default for different metros. We note that this anal-
5 53 5316 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ysis uses the same 50 samples gathered after normalization
5 53 5435 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for the 99 client metros that had sufficient data. We observe
5 53 5555 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . that for 70 out of 99 metros, the median latency of a non-
5 53 5674 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . default PoP was lower in 0‚Äì10 samples out of 50 total samples.
5 53 5794 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The median latency of a non-default PoP for 10 metros was
5 53 5913 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . lower for 45-50 out of total 50 samples. At 90th and 95th
5 53 6033 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . percentile latencies, 50 and 40 metros, respectively, get bet-
5 53 6153 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ter performance from non-default PoPs than the default in
5 53 6272 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 0-10 samples.
5 110 6296 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . Thus, there is an opportunity for improving the
5 53 6416 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . placement of virtual WAN hubs using a dynamic mechanism
5 53 6535 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . since the default PoP suffers worse latency significant number
5 53 6655 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . of times for different client locations.
5 53 6845 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Sustained performance benefit from non-default PoPs.
5 53 6940 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . To understand if the performance improvements offered by
5 318 2733 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . non-default PoPs continue over a duration of time, we calcu-
5 318 2853 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . late how often the non-default PoP performs better than the
5 318 2973 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . default, for the next 1 hour, 10 hours and 24 hour durations.
5 318 3092 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . For each duration, we calculate three metrics, median, 90th,
5 318 3212 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and 95th of latency for samples of default and non-default
5 318 3331 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoPs collected in the time window. Since there can be many
5 318 3451 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . non-default PoPs, we calculate each metric for every unique
5 318 3570 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . non-default PoP, and select the minimum. We compare the
5 318 3690 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . metric for default and non-default PoPs, and keep a count
5 318 3809 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of number of times the non-default PoP performed better
5 318 3929 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in each window where we have samples for both default
5 318 4048 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and non-default PoPs. If we do not have samples for either,
5 317 4168 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . we do not include that window in our analysis. Finally, we
5 318 4288 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . select 50 random samples from all the windows. The total
5 318 4407 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . metros that have at least 50 samples were 84 for 1 hour, 81
5 318 4527 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for 10 hours and 70 for 24 hours. We present the results for
5 318 4646 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 24 hours in Figure 3c. Results for 1 hour and 10 hours show
5 318 4766 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . same trends. We observe that the non-default performance
5 318 4885 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . does not vary for at least 24 hours. The number of metros
5 318 5005 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . having non-default perform better in 0-10 samples, is 40-60
5 318 5124 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . across all the window size.
5 318 5466 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 3.2
5 345 5466 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Insights
5 318 5600 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Our analysis shows that placing virtual WAN hubs in a non-
5 318 5720 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . default PoP further away from the client branch office than
5 318 5839 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the default PoP can improve the latency in 20% of the cases.
5 317 5959 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Therefore, there is an opportunity to develop a dynamic and
5 318 6078 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . data-driven mechanism for a hub placement for virtual WAN
5 318 6198 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . clients. Moreover, we show that while we need to be dynamic,
5 318 6317 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the latency patterns are stable enough that we do not need to
5 318 6437 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . respond to every minute and hour timescale, and it suffices to
5 318 6557 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . be stable for 24 hours or longer timescales. We leverage this
5 318 6676 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . insight to design Magpie that takes a data-driven approach
5 318 6796 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to design performance-optimal virtual WANs that sustain
5 318 6915 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . this performance over next several months.
5 304 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 5
start
<page number="6" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="184.857051" left="161.394000" width="443.086635" height="13.688612" font="11">Submitted for review to SIGCOMM,</text>
6 53 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Submitted for review to SIGCOMM,
6 206 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . 2022
6 530 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . X.et al.
6 53 882 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 4
6 71 882 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . MAGPIE OVERVIEW
6 53 1016 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We develop Magpie, a tool that enables enterprises to design
6 53 1136 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . performance and cost-optimal virtual WAN deployments.
6 53 1255 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . An important feature of Magpie is that it allows enterprise
6 53 1375 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . clients to explicitly state their latency service level objective
6 53 1494 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in the virtual WAN design-phase. Magpie ensures that the
6 53 1614 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . resulting virtual WAN not only meets the SLOs but also
6 53 1733 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . further reduces the weighted latency of the overall WAN
6 53 1853 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topology at the lowest possible cost to the enterprise.
6 63 1973 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie is data-driven. It leverages the streaming latency
6 53 2092 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . measurement pipeline (ß3) to profile the performance of
6 53 2212 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . connections to all cloud PoPs from client metros. Figure 4
6 53 2331 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . shows the design of Magpie. It takes inputs from enterprises
6 53 2451 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (
6 56 2475 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . i.e.,
6 71 2451 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . SLOs per metro, branch office locations and connection
6 53 2570 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . counts), client performance measurements from client loca-
6 53 2690 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tions to cloud provider PoPs, and recommends the number
6 53 2809 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and location of virtual WAN hubs for the enterprise.
6 247 3081 fontspec: HASH(0x55c432f3ea08), font: 24, size: 67 . Cloud 
6 247 3162 fontspec: HASH(0x55c432f3ea08), font: 24, size: 67 . Provider
6 69 3442 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . BRANCH 
6 69 3523 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . OFFICE 
6 69 3604 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . LOCATIONS
6 69 3107 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . ENTERPRISE
6 69 3188 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . SERVICE 
6 69 3268 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . OBJECTIVES
6 148 3515 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . MAGPIE 
6 148 3596 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . TOPOLOGY 
6 148 3677 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . OPTIMIZER
6 148 3091 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . OPTIMAL 
6 148 3171 fontspec: HASH(0x55c432f3ea08), font: 24, size: 67 . VIRTUAL WAN 
6 148 3252 fontspec: HASH(0x55c432f3ea08), font: 24, size: 67 . DESIGN
6 232 4047 fontspec: HASH(0x55c432f3ea08), font: 24, size: 67 . Enterprise 
6 232 4128 fontspec: HASH(0x55c432f3ea08), font: 24, size: 67 . Branch office
6 69 3787 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . TOPOLOGY 
6 69 3868 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . MAINTENANCE 
6 69 3949 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . POLICIES
6 148 3956 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . CLIENT 
6 148 4036 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . PERFORMANCE 
6 148 4117 fontspec: HASH(0x55c432f6a510), font: 24, size: 67 . MEASUREMENTS
6 67 4079 fontspec: HASH(0x55c432f3ecf0), font: 26, size: 50 . (Section 7)
6 144 3800 fontspec: HASH(0x55c432f3ecf0), font: 26, size: 50 . (Section 4, 5)
6 145 4240 fontspec: HASH(0x55c432f3ecf0), font: 26, size: 50 . (Section 3)
6 123 4338 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Figure 4: Magpie Design.
6 63 4471 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We build Magpie with the following design goals:
6 53 4640 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Minimize latency.
6 141 4615 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The primary objective of Magpie is
6 53 4735 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . pick WAN hub placements that minimize the latency across
6 53 4855 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . client connections, subject to a service-level objective for
6 53 4974 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . each branch office location.
6 53 5143 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Minimize number of hubs.
6 179 5119 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . A second objective is to use
6 53 5239 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the minimum number of hubs required to meet the SLO,
6 53 5358 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . which reduces cost of deployment.
6 53 5527 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Limited number of hub migrations.
6 220 5503 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . As internet traffic
6 53 5623 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and routes evolve over time, the optimal hub placement may
6 53 5742 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . change. Magpie seeks to allows movement of WAN hubs to
6 53 5862 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . different datacenters if client performance degrades, but it
6 53 5981 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . keeps the number of hub migrations to a minimum.
6 53 6229 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 4.1
6 81 6229 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Magpie‚Äôs interface to enterprises
6 53 6364 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie seeks three inputs from enterprise clients: (1) the
6 53 6483 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . location of enterprise branch offices, (2) the maximum num-
6 53 6603 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ber of client connections from each branch office and (3)
6 53 6723 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the minimum SLO required from each branch office. For in-
6 53 6842 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . stance, an enterprise can specify that it has threee branch
6 53 6962 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . offices, Sao Paulo, Miami and Madrid. Each branch office will
6 318 867 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . have 500-people teams using the virtual WAN. Finally, each
6 318 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . branch office requires at most 80
6 456 1010 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . ms
6 471 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latency access to the
6 318 1106 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cloud-hosted database at least 90% of the time.
6 318 1353 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 4.2
6 345 1353 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Magpie‚Äôs optimal hub placement
6 318 1488 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Equipped with the enterprise inputs and performance mea-
6 318 1607 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . surements from the cloud provider, Magpie formalizes the
6 318 1727 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . problem of optimal WAN hub placement. Magpie formulates
6 318 1846 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the problem as a mixed integer linear program (MILP). The
6 318 1966 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . decision variables of the optimization decide which cloud
6 318 2085 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoP should be selected for placing a WAN hub for one or
6 318 2205 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . more enterprise branch offices. We discuss the details of the
6 318 2324 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . optimization formulation in Section 5.
6 318 2572 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 4.3
6 345 2572 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Magpie‚Äôs WAN topology maintenance
6 318 2706 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Once an enterprise deploys a virtual WAN topology, modify-
6 318 2826 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ing the topology causes hours of service disruption for en-
6 318 2945 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . terprise clients. For instance, inter-domain routing changes,
6 318 3065 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . transient performance degradations due to congestion and
6 318 3184 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . misconfigurations can degrade the latency of the optimal
6 317 3304 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . virtual WAN topology over time. Therefore, it is important
6 318 3423 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to
6 329 3447 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . maintain
6 369 3423 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . virtual WAN topologies constructed by Mag-
6 318 3543 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . pie such that enterprises can continue to enjoy low latency
6 318 3663 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . access without service disruptions due to hub migration.
6 318 3782 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie designs polices to determine when to reconfigure a
6 317 3902 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . virtual WAN topology. These polices allows allow customers
6 318 4021 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to trade-off latency against hub reconfiguration ‚Äî by choos-
6 318 4141 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ing to reconfigure infrequently, a customer may sacrifice a
6 318 4260 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . some latency but have a more available network. Likewise,
6 318 4380 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . customers desiring the minimum latency may choose to re-
6 318 4499 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . configure frequently in search of the best performance PoPs.
6 317 4619 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We discuss how policies can allow the graceful evolution of
6 317 4739 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . virtual WAN topologies in Section 7.
6 318 4986 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 5
6 336 4986 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . OPTIMAL VIRTUAL WAN TOPOLOGIES
6 318 5120 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Designing virtual WAN topologies entails deciding the num-
6 318 5240 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ber of virtual WAN hubs and their placement in the WAN.
6 318 5359 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . In this section, we formalize the virtual WAN design prob-
6 318 5479 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . lem as an optimization. We describe the inputs, decision and
6 318 5599 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . auxiliary variables, and constraints of the optimization.
6 318 5766 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Branch office locations.
6 426 5742 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The optimization algorithm takes
6 318 5862 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the location of enterprise branch offices at the granularity
6 318 5981 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of a metropolitan location.
6 430 6008 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
6 441 5981 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is the set of all branch office
6 318 6101 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . locations and
6 373 6127 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÉ
6 381 6101 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is the set of all cloud PoPs. We prune the set
6 318 6221 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of PoPs
6 351 6247 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÉ
6 360 6221 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . by removing cloud PoPs for which there are no
6 318 6340 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latency measurements from any metros in
6 485 6366 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
6 494 6340 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . . The size of sets
6 317 6486 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
6 329 6460 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and
6 346 6486 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÉ
6 354 6460 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . are represented by variables,
6 471 6486 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
6 482 6460 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and
6 499 6486 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
6 505 6460 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . , respectively.
6 318 6628 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Service-level objective.
6 425 6604 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie takes as input the SLOs
6 318 6723 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for each enterprise branch office that specifies the desired
6 318 6843 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latency and percentile threshold (
6 455 6867 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . e.g.,
6 473 6843 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . at most 80
6 515 6867 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . ms
6 529 6843 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . second
6 318 6962 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latency, at least 90% of the time) for the branch office. The
6 304 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 6
start
<page number="7" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="184.857051" left="161.394000" width="751.711107" height="13.688612" font="11">Intelligent virtualized wide-area network design with Magpie</text>
7 53 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Intelligent virtualized wide-area network design with Magpie
7 387 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Submitted for review to SIGCOMM,
7 539 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . 2022
7 53 890 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Algorithm 1
7 111 866 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Optimal hub placement algorithm
7 63 1040 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Inputs:
7 63 1162 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 69 1136 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . :
7 115 1136 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Total unique PoPs
7 63 1282 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 71 1255 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . :
7 115 1255 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Total unique metro in SLO
7 63 1401 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÉ
7 69 1375 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . :
7 116 1375 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Set of unique PoPs
7 63 1521 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 72 1494 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . :
7 117 1494 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Set of unique metros
7 63 1640 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêø
7 68 1667 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ ùëó
7 75 1614 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . :
7 116 1640 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 124 1613 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ◊
7 132 1640 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 143 1614 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . matrix for latency offered by each
7 117 1733 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . metro-PoP pair
7 63 1879 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÜ
7 68 1906 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ ùëó
7 74 1853 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . :
7 116 1879 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 124 1852 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ◊
7 132 1879 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 142 1853 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . matrix for percentile threshold offered
7 117 1973 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . by each metro-PoP pair
7 63 2118 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõº
7 69 2092 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . :
7 116 2092 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 1
7 123 2091 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ◊
7 131 2118 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 142 2092 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . matrix for latency required by
7 114 2212 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . customer
7 63 2357 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùúá
7 68 2331 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . :
7 116 2331 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 1
7 123 2331 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ◊
7 131 2357 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 141 2331 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . matrix for percentile threshold
7 114 2451 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . customer required by customer
7 63 2597 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõΩ
7 69 2570 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . :
7 117 2570 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Constant for connections per hub
7 63 2716 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùê∂
7 70 2690 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . :
7 117 2690 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 1
7 124 2689 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ◊
7 132 2716 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 142 2690 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . matrix for total connections expected
7 117 2809 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . from each metro
7 63 2955 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêæ
7 70 2929 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . :
7 117 2929 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Minimum number of unique PoPs needed
7 117 3048 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to achieve the objective
7 63 3312 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Outputs:
7 63 3433 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 71 3407 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 75 3433 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 113 3433 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 123 3407 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ◊
7 132 3433 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 140 3407 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . auxiliary variable
7 63 3553 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 69 3527 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 73 3553 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 115 3527 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 1
7 122 3526 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ◊
7 130 3553 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 140 3527 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . output variable for PoP selected for
7 114 3646 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . each metro
7 63 3792 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùë¢
7 69 3766 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 73 3792 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 113 3766 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 1
7 120 3765 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ◊
7 128 3792 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 136 3766 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . output variable for tracking the unique
7 114 3885 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . occurrence of each PoP in
7 222 3912 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÉ
7 63 4149 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Minimize:
7 111 4119 fontspec: HASH(0x55c432f3ed50), font: 27, size: 100 . Õ
7 119 4121 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëö
7 119 4188 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 122 4171 fontspec: HASH(0x55c432f3ef30), font: 28, size: 73 . =
7 126 4169 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . 1
7 130 4151 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 137 4124 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 142 4151 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 150 4178 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 153 4124 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ◊
7 159 4151 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêø
7 165 4158 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . :
7 166 4178 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 169 4124 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ◊
7 175 4151 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùê∂
7 181 4178 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 63 4268 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . subject to:
7 56 4364 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (1) 0
7 79 4363 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚â§
7 88 4390 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 96 4364 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 101 4390 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 109 4417 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ ùëó
7 118 4363 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚â§
7 128 4364 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 1
7 242 4363 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
7 247 4390 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 253 4363 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 261 4390 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö, ùëó
7 280 4363 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 288 4390 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 56 4490 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (2)
7 72 4485 fontspec: HASH(0x55c432f3ed50), font: 27, size: 100 . Õ
7 80 4476 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëù
7 80 4560 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëó
7 83 4542 fontspec: HASH(0x55c432f3ef30), font: 28, size: 73 . =
7 88 4541 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . 1
7 92 4516 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 100 4490 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 105 4516 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 113 4543 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ ùëó
7 122 4492 fontspec: HASH(0x55c432f3ef60), font: 30, size: 100 . =
7 131 4490 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 1
7 266 4490 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
7 271 4516 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 278 4490 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 285 4516 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 56 4634 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (3)
7 72 4628 fontspec: HASH(0x55c432f3ed50), font: 27, size: 100 . Õ
7 80 4620 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëù
7 80 4704 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëó
7 83 4686 fontspec: HASH(0x55c432f3ef30), font: 28, size: 73 . =
7 88 4684 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . 1
7 94 4660 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëó
7 100 4633 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ∑
7 104 4660 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 112 4634 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 117 4660 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 124 4687 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëö ùëó
7 137 4636 fontspec: HASH(0x55c432f3ef60), font: 30, size: 100 . =
7 146 4660 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 151 4634 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 156 4660 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 163 4687 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 266 4633 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
7 271 4660 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 278 4633 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 285 4660 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 56 4760 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (4) 1
7 79 4760 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚â§
7 89 4786 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 94 4760 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 98 4786 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 106 4813 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 113 4760 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚â§
7 122 4786 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 266 4760 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
7 271 4786 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 278 4760 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 285 4786 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 56 4880 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (5)
7 71 4906 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùë¢
7 77 4880 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 82 4906 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 87 4933 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 92 4879 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àí
7 100 4906 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 108 4880 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 113 4906 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 121 4913 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . :
7 122 4933 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 129 4879 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚â•
7 138 4880 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 0
7 268 4879 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
7 274 4906 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 280 4879 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 288 4906 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 56 5000 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (6)
7 72 4995 fontspec: HASH(0x55c432f3ed50), font: 27, size: 100 . Õ
7 80 4986 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëù
7 80 5070 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 82 5053 fontspec: HASH(0x55c432f3ef30), font: 28, size: 73 . =
7 87 5051 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . 1
7 92 5027 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùë¢
7 97 5000 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 102 5027 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 107 5053 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 113 5026 fontspec: HASH(0x55c432f3f0f8), font: 31, size: 100 . <
7 120 5002 fontspec: HASH(0x55c432f3ef60), font: 30, size: 100 . =
7 128 5027 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêæ
7 56 5120 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (7)
7 71 5146 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 79 5120 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 84 5146 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 92 5173 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 97 5119 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ∑
7 102 5146 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêø
7 107 5154 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . :
7 108 5173 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 115 5119 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚â§
7 124 5146 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõº
7 129 5173 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 266 5119 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
7 271 5146 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 278 5119 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 285 5146 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 56 5239 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (8)
7 71 5266 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 79 5239 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 84 5266 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 92 5293 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 97 5239 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ∑
7 102 5266 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÜ
7 107 5273 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . :
7 108 5293 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 114 5239 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚â•
7 124 5266 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùúá
7 128 5293 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 266 5239 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
7 271 5266 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 278 5239 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 285 5266 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 53 5608 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latency (
7 89 5632 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . e.g.,
7 107 5608 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 80
7 117 5632 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . ms
7 129 5608 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ) is represented by
7 208 5634 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõº
7 214 5608 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . , and the percentile
7 53 5727 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . threshold (
7 97 5751 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . e.g.,
7 115 5727 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 90%) by
7 149 5753 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùúá
7 154 5727 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . .
7 53 5905 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Connections per hub.
7 156 5881 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . There is a limit on the number of
7 53 6001 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . simultaneous connections to a virtual WAN hub in cloud
7 53 6120 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . networks. This limit is fixed for all hubs regardless of their
7 53 6240 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . location in the cloud network.
7 175 6266 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõΩ
7 183 6240 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is a constant that represents
7 53 6360 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the per-hub connection limit. In our evaluation, we set
7 278 6386 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõΩ
7 285 6360 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to
7 53 6479 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 1000 [25]. The enterprise customer provides the number of
7 53 6599 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . expected connections from each branch office, represented
7 53 6718 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . by the vector
7 108 6744 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùê∂
7 118 6718 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of size
7 145 6744 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 153 6718 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . . We assume that one branch office
7 53 6838 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . connects to one virtual WAN hub (
7 189 6862 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . i.e.,
7 204 6838 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . , it does not split traffic
7 53 6957 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . across multiple PoPs).
7 318 891 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Deployment size.
7 399 867 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie attempts to design virtual WAN
7 318 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topologies within
7 390 1013 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëò
7 398 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hubs.
7 422 1013 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëò
7 430 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is an input to the algorithm. We
7 318 1106 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . search for the smallest value of
7 443 1132 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëò
7 451 1106 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for which the optimization
7 318 1225 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . can find a feasible solution. From there, we backtrack
7 541 1252 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëò
7 549 1225 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in
7 318 1345 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . steps of 1. This allows us to explore the cost vs. performance
7 318 1464 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Pareto frontier.
7 318 1641 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Latency measurements from client locations.
7 526 1617 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie
7 318 1736 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . derives measured latencies and the percentage of time the
7 318 1856 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latencies can be achieved for connections between PoPs in
7 317 2002 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÉ
7 326 1975 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and metros in
7 384 2002 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 395 1975 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . using the latency measurement pipeline
7 318 2095 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . described in ß3. These measured latency inputs are in the
7 318 2214 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . form of matrices
7 385 2241 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêø
7 393 2214 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and
7 410 2241 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÜ
7 415 2214 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . .
7 419 2241 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêø
7 427 2214 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . contains the latency from metros
7 318 2334 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to PoPs, and
7 373 2360 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÜ
7 382 2334 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . has the percentile threshold for the corre-
7 318 2453 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . sponding latency in
7 398 2480 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêø
7 403 2453 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . . Both matrices are
7 479 2480 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 487 2453 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ◊
7 495 2480 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 505 2453 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in dimension.
7 317 2599 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêø
7 322 2626 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ ùëó
7 331 2573 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . represents the latency to PoP
7 453 2599 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÉ
7 458 2626 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 464 2573 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . from metro
7 513 2599 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 521 2626 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëó
7 525 2573 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . , and
7 547 2599 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÜ
7 551 2626 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ ùëó
7 318 2693 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is the percentile threshold for that latency.
7 318 2869 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Decision Variables.
7 406 2845 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Our formulation has two decision vari-
7 318 2964 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ables. The first is an auxiliary variable which makes sure that
7 318 3084 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . only one optimal PoP is selected for a metro. We represent
7 318 3203 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . this with a 2-dimensional matrix
7 456 3230 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 464 3203 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 468 3230 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 480 3203 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of size
7 508 3230 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 519 3203 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ◊
7 527 3230 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 533 3203 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . . Each
7 318 3323 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . item in the matrix is a binary variables, like so:
7 374 3612 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 382 3585 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 387 3612 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 395 3639 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ ùëó
7 404 3585 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà {
7 417 3585 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 0
7 421 3612 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ,
7 425 3585 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 1
7 430 3585 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . }
7 448 3585 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
7 454 3612 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 460 3585 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 468 3612 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö, ùëó
7 487 3585 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 495 3612 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 547 3585 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (1)
7 327 3749 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Each row in
7 378 3776 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 386 3749 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 391 3776 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 402 3749 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . represents a metro in
7 492 3776 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 501 3749 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . , and each col-
7 318 3869 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . umn represents a PoP in
7 426 3895 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÉ
7 432 3869 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . . Each cell (
7 481 3895 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 489 3869 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 494 3895 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 502 3922 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ ùëó
7 508 3869 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ) represents
7 317 3988 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . whether PoP
7 374 4015 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëó
7 380 3988 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is selected for metro
7 467 4015 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 471 3988 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . . When a cell,
7 530 4015 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 538 3988 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 542 4015 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 550 4042 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ ùëó
7 557 3988 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ,
7 318 4108 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . takes value 1, it indicates that the WAN hub for branch office
7 318 4228 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in metro
7 354 4254 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 360 4228 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . will be placed in PoP
7 448 4254 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëó
7 452 4228 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . .
7 327 4347 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The second and main decision variable of the optimization
7 318 4467 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is
7 328 4493 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 332 4520 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëö
7 343 4467 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of size 1
7 381 4466 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ◊
7 389 4493 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 401 4467 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . where each cell
7 471 4493 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëó
7 478 4467 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . represents the PoP
7 318 4586 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . selected for metro
7 395 4612 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëó
7 402 4586 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 410 4612 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 421 4586 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and the value of the cell contains
7 318 4706 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the index
7 357 4732 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 363 4706 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of PoP in
7 403 4732 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÉ
7 409 4706 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . .
7 318 4882 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Constraints.
7 378 4858 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . To make sure only one PoP is selected for a
7 318 4977 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . metro, we add a constraint on the values in
7 495 5004 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 502 5031 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëÄ
7 509 4977 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . .
7 381 5151 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëù
7 376 5205 fontspec: HASH(0x55c432f3ed50), font: 27, size: 100 . ’
7 378 5394 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëó
7 381 5376 fontspec: HASH(0x55c432f3ef30), font: 28, size: 73 . =
7 385 5374 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . 1
7 391 5269 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 398 5243 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 403 5269 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 411 5296 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ ùëó
7 420 5245 fontspec: HASH(0x55c432f3ef60), font: 30, size: 100 . =
7 429 5243 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 1
7 473 5243 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
7 478 5269 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 485 5243 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 492 5269 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 547 5243 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (2)
7 327 5523 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . To impose that the correct index,
7 463 5550 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëó
7 469 5523 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of PoP in
7 508 5550 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÉ
7 517 5523 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is selected
7 318 5643 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for metro
7 359 5669 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 366 5642 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 375 5669 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 383 5643 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . , the cell,
7 423 5669 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 431 5643 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 435 5669 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 443 5696 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ ùëó
7 452 5643 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . should be set to 1. This is
7 318 5762 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . captured by the constraint:
7 378 5999 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëù
7 373 6053 fontspec: HASH(0x55c432f3ed50), font: 27, size: 100 . ’
7 375 6241 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëó
7 378 6223 fontspec: HASH(0x55c432f3ef30), font: 28, size: 73 . =
7 382 6221 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . 1
7 389 6117 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëó
7 395 6090 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ∑
7 399 6117 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
7 407 6090 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 412 6117 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
7 419 6144 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëö ùëó
7 433 6092 fontspec: HASH(0x55c432f3ef60), font: 30, size: 100 . =
7 441 6117 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 447 6090 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 451 6117 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 459 6144 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 476 6090 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
7 481 6117 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 488 6090 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 495 6117 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 547 6090 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (3)
7 327 6350 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The values in the output variable
7 460 6373 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . p_m
7 479 6350 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . should only contain
7 317 6469 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . valid PoP indices:
7 389 6654 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 1
7 397 6653 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚â§
7 406 6680 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
7 412 6654 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
7 416 6680 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 424 6707 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
7 430 6653 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚â§
7 439 6680 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëõ
7 459 6653 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
7 464 6680 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
7 470 6653 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
7 478 6680 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
7 547 6654 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (4)
7 327 6839 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Multiple occurrence of PoPs, i.e, if the same PoP is picked
7 318 6958 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for multiple metros, should be counted only once:
7 304 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 7
start
<page number="8" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="184.857051" left="161.394000" width="443.086635" height="13.688612" font="11">Submitted for review to SIGCOMM,</text>
8 53 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Submitted for review to SIGCOMM,
8 206 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . 2022
8 530 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . X.et al.
8 118 1016 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùë¢
8 124 989 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
8 128 1016 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
8 133 1043 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
8 139 989 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àí
8 147 1016 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
8 155 989 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
8 159 1016 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
8 167 1023 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . :
8 169 1043 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
8 175 989 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚â•
8 185 989 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 0
8 203 989 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
8 208 1016 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
8 215 989 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
8 223 1016 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
8 283 989 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (5)
8 63 1133 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . And, the sum of unique PoPs should not exceed,
8 262 1160 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêæ
8 269 1133 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . :
8 130 1295 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëù
8 125 1349 fontspec: HASH(0x55c432f3ed50), font: 27, size: 100 . ’
8 127 1537 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
8 129 1520 fontspec: HASH(0x55c432f3ef30), font: 28, size: 73 . =
8 134 1518 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . 1
8 140 1413 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùë¢
8 145 1387 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
8 150 1413 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
8 155 1440 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
8 161 1413 fontspec: HASH(0x55c432f3f0f8), font: 31, size: 100 . <
8 168 1389 fontspec: HASH(0x55c432f3ef60), font: 30, size: 100 . =
8 176 1413 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêæ
8 283 1387 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (6)
8 53 1633 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We set this value so that the optimization achieves the ob-
8 53 1753 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . jective with minimum number of PoPs. This is important
8 53 1872 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in reducing the number of hubs as metros with the same
8 53 1992 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoPs can be merged, aggregating the total connections. Fur-
8 53 2111 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . thermore, this sum can be divided by
8 209 2138 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõΩ
8 217 2111 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . giving the number
8 53 2231 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of hubs. To compute the number of hubs, we sum the con-
8 53 2350 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . nections to each chosen PoP across all metros that chose it
8 53 2470 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and divide those sums by
8 159 2496 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõΩ
8 167 2470 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to get the total number of hubs
8 53 2589 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . required at each PoP. Adding these totals yields the total
8 53 2709 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . number of required hubs for the topology.
8 53 2875 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Demand Constraints.
8 156 2851 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The latency value and percentile
8 53 2971 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of the customer SLO is captured by variables,
8 246 2997 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõº
8 255 2971 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and
8 273 2997 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùúá
8 278 2971 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . , re-
8 53 3090 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . spectively. The PoP chosen for a metro,
8 213 3090 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . (
8 216 3117 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
8 224 3143 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
8 230 3090 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . should meet the
8 53 3210 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . minimum latency and percentile requirement:
8 122 3478 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
8 130 3452 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
8 134 3478 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
8 142 3505 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
8 148 3452 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ∑
8 152 3478 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêø
8 158 3486 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . :
8 159 3505 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
8 165 3452 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚â§
8 175 3478 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõº
8 180 3505 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
8 197 3452 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
8 202 3478 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
8 209 3452 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
8 216 3478 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
8 283 3452 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (7)
8 122 3745 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëà
8 130 3719 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . _
8 135 3745 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÄ
8 143 3772 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
8 148 3718 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ∑
8 153 3745 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÜ
8 158 3753 fontspec: HASH(0x55c432f3ee28), font: 29, size: 73 . :
8 159 3772 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
8 165 3718 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚â•
8 175 3745 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùúá
8 179 3772 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëñ
8 197 3718 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àÄ
8 202 3745 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëñ
8 208 3718 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚àà
8 216 3745 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
8 283 3719 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (8)
8 53 3909 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Objective Function.
8 146 3885 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie minimizes the sum of laten-
8 53 4005 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cies from each branch office to the PoP it is mapped to,
8 53 4124 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . weighted by the number of client connections from that
8 53 4244 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . branch. The optimization finds PoPs (
8 205 4270 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëù
8 210 4297 fontspec: HASH(0x55c432f3eb10), font: 23, size: 73 . ùëö
8 217 4244 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ) that minimize the
8 53 4363 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . weighted latency while ensuring that the client SLOs are met.
8 53 4483 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Moreover, by re-running the algorithm for different values
8 53 4602 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of
8 64 4629 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëò
8 69 4602 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . , we arrive at the lowest number of hubs that can meet
8 53 4722 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the client SLO while minimizing the weighted latency.
8 53 4888 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Total Hubs.
8 109 4864 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We calculate the total number of hubs from the
8 53 4984 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . optimization output in a post-processing step. WAN hubs
8 53 5103 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in the same PoP from multiple metros are merged into one
8 53 5223 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . set of hubs large enough to handle the connections from
8 53 5342 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . all metros served by the hub. Magpie calculates the total
8 53 5462 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . number of connections to a PoP divided by
8 238 5488 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõΩ
8 247 5462 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . as the total
8 53 5581 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hubs required for a hub location.
8 63 5701 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Algorithm 1 summarizes the Magpie‚Äôs optimization for-
8 53 5820 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . mulation using equations (1)-(8).
8 53 6066 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 6
8 71 6066 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . HUB PLACEMENT EVALUATION
8 53 6201 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The goal for Magpie is to produce better virtual WAN topolo-
8 53 6320 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . gies than the default choice of geographically closest cloud
8 53 6440 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoP. We evaluate Magpie‚Äôs ability along two dimensions:
8 69 6581 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚Ä¢
8 78 6582 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Can Magpie improve overall latency of a topology?
8 69 6701 fontspec: HASH(0x55c432e858f0), font: 9, size: 100 . ‚Ä¢
8 78 6701 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Can Magpie reduce the total number of hubs required?
8 53 6843 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . In both cases, we require that any generated topology satisfy
8 53 6963 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the customer‚Äôs SLO.
8 318 882 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 6.1
8 345 882 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Methods
8 317 1016 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We implement Magpie optimization algorithm in Python 3
8 318 1136 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . using the embedded convex optimization language, CVXPY [1,
8 317 1255 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 10]. Algorithm 1 solves a mixed integer linear problem(MILP).
8 318 1375 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . In practice, CVXPY solves a MILP efficiently by choosing its
8 318 1494 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . default solver suitable for the problem objective.
8 327 1614 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We evaluate the optimization algorithm on the latency
8 318 1733 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . measurement dataset collected in October-November 2021.
8 317 1853 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Table 2 summarizes the data. We only include the metros
8 318 1973 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . having connection latencies to more than one PoP. We mea-
8 318 2092 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . sure the overall latency of a topology as the
8 497 2116 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . average latency
8 318 2236 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . across all connections
8 399 2212 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . : we calculate the average latency across
8 318 2331 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . a customer‚Äôs metro regions weighted by the number of con-
8 318 2451 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . nections from the region. As stated in (ß5), we set the con-
8 318 2570 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . nection limit per hub to 1000. For example, if a metro has
8 318 2690 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 3200 total connections, it will need minimum of 4 hubs.
8 318 2873 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Synthetic customer topology.
8 451 2849 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Real virtual WAN customer
8 318 2968 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topologies (branch offices and number of connections needed
8 318 3088 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for a company) were not available to us. Instead, we generate
8 318 3231 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . synthetic client topologies
8 425 3207 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of sizes 5, 10, 25, 50, 75 and 100
8 318 3327 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . branch offices (metro regions). The metro locations for each
8 318 3446 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . are randomly selected from the set of metros. For each size,
8 317 3566 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . we generate 5 topologies, with a total of 30 topologies. For
8 318 3686 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the number of connections from a branch office, we choose
8 318 3805 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . a number from an exponential distribution with a 90% prob-
8 318 3925 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ability of the number being between 100 and 10,000.
8 327 4044 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . In the default topology (our baseline), we calculate
8 534 4071 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõº
8 543 4044 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and
8 318 4190 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùúá
8 325 4164 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . value of the geographically nearest PoP for the metro from
8 318 4283 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the latency measurement data.
8 367 4443 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . metro
8 401 4443 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . clients
8 438 4443 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . default PoP
8 498 4470 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõº
8 519 4470 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùúá
8 351 4567 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Louisiana
8 414 4567 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 825
8 472 4567 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . dal
8 495 4567 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 31
8 515 4567 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 90
8 327 4724 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . One metro from a synthetic topology is shown above: the
8 318 4844 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . customer has a branch office in Louisiana needing 825 con-
8 318 4964 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . nections, with a default (closest) PoP of Dallas (dal), which
8 317 5083 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . was measured to have 90th percentile latency of 31
8 525 5107 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . ms
8 536 5083 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . .
8 318 5266 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Synthetic SLOs.
8 399 5242 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Service level objectives (SLO) capture
8 318 5362 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the minimum latency and percentile threshold a customer
8 318 5481 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . desires. With synthetic topologies, we do not have real cus-
8 318 5601 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tomer input on desired SLOs. Instead, we generate synthetic
8 318 5720 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . SLOs using the latency measurement data (ß3) for the default
8 318 5840 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoP for each metro in a synthetic topology. Rather than pick
8 318 5959 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . a single threshold, we generate target latency
8 499 5986 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõº
8 507 5959 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for 50, 80, 90,
8 318 6079 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and 95th percentile (value of
8 433 6105 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùúá
8 438 6079 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ). Thus, we assume the default
8 318 6198 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topology perfectly provides the desired customer SLO, so
8 318 6318 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . any generated topology must have performance equal to or
8 318 6437 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . better than the default topology. We present the results for
8 318 6557 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 90th percentile as other percentiles show similar trends.
8 318 6740 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Provider topologies.
8 413 6716 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The hub placement algorithm takes
8 318 6835 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the synthetic topology as an input and calculates all the vari-
8 318 6955 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ables of the optimizations stated in section (ß5). We simplify
8 304 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 8
start
<page number="9" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="184.857051" left="161.394000" width="751.711107" height="13.688612" font="11">Intelligent virtualized wide-area network design with Magpie</text>
9 53 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Intelligent virtualized wide-area network design with Magpie
9 387 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Submitted for review to SIGCOMM,
9 539 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . 2022
9 86 855 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Total samples
9 224 855 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 3,531,541
9 86 978 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Total samples of metros >1 PoP
9 224 980 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 2,530,985
9 86 1103 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Metros with 1 PoP
9 247 1103 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 152
9 86 1227 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Metros >1 PoP(s)
9 247 1227 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 129
9 104 1382 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Table 2: Evaluation data summary
9 105 2595 fontspec: HASH(0x55c432f425c0), font: 32, size: 63 . 40
9 132 2595 fontspec: HASH(0x55c432f425c0), font: 32, size: 63 . 50
9 158 2595 fontspec: HASH(0x55c432f425c0), font: 32, size: 63 . 60
9 185 2595 fontspec: HASH(0x55c432f425c0), font: 32, size: 63 . 70
9 211 2595 fontspec: HASH(0x55c432f425c0), font: 32, size: 63 . 80
9 237 2595 fontspec: HASH(0x55c432f425c0), font: 32, size: 63 . 90
9 139 2673 fontspec: HASH(0x55c432f425c0), font: 32, size: 63 . Latency per connection(ms)
9 87 2525 fontspec: HASH(0x55c432f425c0), font: 32, size: 63 . 0.0
9 87 2332 fontspec: HASH(0x55c432f425c0), font: 32, size: 63 . 0.2
9 87 2138 fontspec: HASH(0x55c432f425c0), font: 32, size: 63 . 0.4
9 87 1944 fontspec: HASH(0x55c432f425c0), font: 32, size: 63 . 0.6
9 87 1751 fontspec: HASH(0x55c432f425c0), font: 32, size: 63 . 0.8
9 87 1557 fontspec: HASH(0x55c432f425c0), font: 32, size: 63 . 1.0
9 117 1574 fontspec: HASH(0x55c432f42a10), font: 34, size: 47 . baseline
9 117 1639 fontspec: HASH(0x55c432f42a10), font: 34, size: 47 . optimized
9 56 2803 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Figure 5: Avg. latency of baseline vs. optimized topologies.
9 53 2969 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the inputs by only including PoPs for which at least one cus-
9 53 3089 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tomer metro has latency information in latency measurement
9 53 3209 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . data. To calculate
9 124 3235 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêø
9 132 3209 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (latency) and
9 185 3235 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëÜ
9 192 3209 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (percentile threshold), we
9 53 3328 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . use the latency data to calculate the latency values from each
9 53 3448 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . metro to each PoP at customer-specified percentile threshold
9 53 3593 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùúá
9 61 3567 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for metro; PoPs for which there is no data are given a very
9 53 3687 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . high latency to prevent them from being selected.
9 53 3855 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Minimizing hub count.
9 164 3831 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The optimization algorithm on
9 53 3950 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . its own does not provide the minimum number of hubs re-
9 53 4070 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . quired to satisfy a client topology. We use the constraint
9 286 4096 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêæ
9 53 4189 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . on the number of PoPs allowed for this purpose by starting
9 53 4309 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . with
9 74 4335 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêæ
9 84 4311 fontspec: HASH(0x55c432f3ef60), font: 30, size: 100 . =
9 92 4335 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùëö
9 103 4309 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (the number of client locations) and search for
9 53 4428 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the lowest value of
9 134 4455 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùêæ
9 143 4428 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . that satisfies the customer SLO. This
9 53 4548 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . gives us the minimum number of PoPs, and we calculate the
9 53 4668 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . minimum number of hubs by summing the connections from
9 53 4787 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . each metro connecting to that PoP then dividing by
9 270 4813 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõΩ
9 276 4787 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . , the
9 53 4907 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . connection limit for a hub. We note that this may not be opti-
9 53 5026 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . mal, as it does not allow a customer site to split connections
9 53 5146 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . across multiple PoPs.
9 63 5265 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . For all the formulated topologies of any size in our evalu-
9 53 5385 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ation, the optimization takes less than a minute to execute.
9 53 5632 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 6.2
9 81 5632 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Latency Results
9 53 5767 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The optimization algorithm of Magpie seeks to minimize
9 53 5886 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the latency per connection to all the metros while satisfying
9 53 6006 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the SLO. We compare the average latency across connections
9 53 6125 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . from the Magpie‚Äôs generated topology with the baseline de-
9 53 6245 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . fault topology. Figure 5 shows the CDF for the latency across
9 53 6364 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . all the 30 topologies. This result shows that for all the topolo-
9 53 6484 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . gies, the optimization is able to pick the PoP that satisfies the
9 53 6604 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . SLO, and minimizes the latency per connection for the topol-
9 53 6723 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ogy. While not every metro experiences reduced latency, on
9 53 6843 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . average the customer experiences reduced latency.
9 263 6867 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . Magpie
9 53 6986 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . is able to reduce the latency for customers in many cases.
9 381 1928 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 5
9 405 1928 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 10
9 430 1928 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 25
9 456 1928 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 50
9 482 1928 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 75
9 505 1928 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 100
9 426 2006 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . Topology Size
9 358 1873 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 0
9 358 1740 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 5
9 354 1607 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 10
9 354 1474 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 15
9 354 1341 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 20
9 354 1208 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 25
9 354 1075 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 30
9 354 942 fontspec: HASH(0x55c432f42a58), font: 35, size: 63 . 35
9 318 2154 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Figure 6: Reduction in weighted latencies. The average re-
9 318 2263 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . duction is
9 362 2263 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . 23% with Magpie.
9 380 3349 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 20
9 396 3349 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 40
9 412 3349 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 60
9 429 3349 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 80
9 443 3349 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 100
9 460 3349 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 120
9 476 3349 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 140
9 492 3349 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 160
9 508 3349 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 180
9 433 3418 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . Hub size
9 362 3301 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 0.3
9 362 3178 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 0.4
9 362 3056 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 0.5
9 362 2933 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 0.6
9 362 2810 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 0.7
9 362 2687 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 0.8
9 362 2564 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 0.9
9 362 2441 fontspec: HASH(0x55c432f42c20), font: 37, size: 57 . 1.0
9 388 2456 fontspec: HASH(0x55c432f42e78), font: 39, size: 40 . baseline-3
9 388 2513 fontspec: HASH(0x55c432f42e78), font: 39, size: 40 . baseline-1
9 388 2570 fontspec: HASH(0x55c432f42e78), font: 39, size: 40 . baseline-2
9 388 2628 fontspec: HASH(0x55c432f42e78), font: 39, size: 40 . optimized
9 318 3536 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Figure 7: CDF of hub sizes. Magpie outperforms baseline-1,
9 318 3645 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . and for 78% of the topologies it does better than baseline-2.
9 388 4856 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . 5
9 409 4856 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . 10
9 431 4856 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . 25
9 454 4856 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . 50
9 476 4856 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . 75
9 497 4856 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . 100
9 427 4924 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . Topology Size
9 368 4808 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . 0
9 368 4656 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . 5
9 365 4503 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . 10
9 365 4351 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . 15
9 365 4198 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . 20
9 365 4046 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . 25
9 365 3894 fontspec: HASH(0x55c432f42f80), font: 40, size: 57 . 30
9 318 5058 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Figure 8: Reduction in hub sizes. The average reduction is
9 318 5168 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . 23% with Magpie with baseline-1.
9 327 5350 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Figure 6 shows the reduction in latency for different syn-
9 318 5470 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . thetic topology sizes, which range between 12-36%. For small
9 318 5589 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topologies, there may be several nodes with few good al-
9 318 5709 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ternatives, while larger topologies generally provide more
9 318 5828 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . opportunities for optimization.
9 444 5852 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . Magpie reduces the weighted
9 318 5972 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . latency on an average by nearly 23%.
9 318 6199 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 6.3
9 345 6199 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Topology Sizes
9 318 6334 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie aims to achieve the SLO with the minimum num-
9 318 6453 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ber of hubs. To understand the performance of Magpie in
9 318 6573 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . terms of the hub size, we compare Magpie‚Äôs optimized hub
9 318 6692 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . placement against three baselines:
9 327 6841 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (1)
9 342 6865 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . baseline-1
9 382 6841 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . : we assume each metro has its own set of
9 342 6960 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hubs. We first divide the number of connections per
9 304 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 9
start
<page number="10" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="184.857051" left="161.394000" width="443.086635" height="13.688612" font="11">Submitted for review to SIGCOMM,</text>
10 53 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Submitted for review to SIGCOMM,
10 206 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . 2022
10 530 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . X.et al.
10 117 1928 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 5
10 141 1928 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 10
10 166 1928 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 25
10 192 1928 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 50
10 217 1928 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 75
10 241 1928 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 100
10 162 2006 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . Topology Size
10 94 1873 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 0
10 94 1741 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 5
10 90 1608 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 10
10 90 1476 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 15
10 90 1344 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 20
10 90 1211 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 25
10 90 1079 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 30
10 90 947 fontspec: HASH(0x55c432f43070), font: 42, size: 63 . 35
10 53 2154 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Figure 9: Average change to non-default PoPs. For every 5
10 53 2263 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . metros, there is a switch to a non-default PoP.
10 78 2467 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . metro by
10 116 2494 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõΩ
10 122 2467 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . , and then take the sum over all the metros.
10 77 2587 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . This approach is commonly used today.
10 63 2706 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (2)
10 78 2730 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . baseline-2
10 117 2706 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . : we allow metros to share hubs. We calculate
10 78 2826 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the number of connections to each PoP from all metros,
10 78 2946 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and divide by
10 134 2972 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõΩ
10 142 2946 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to get the number of hubs at that PoP,
10 78 3065 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and then sum across all PoPs.
10 63 3185 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . (3)
10 78 3209 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . baseline-3
10 118 3185 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . : we calculate the minimum possible hubs
10 78 3304 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . irrespective of topology. We sum the required con-
10 78 3424 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . nections from each metro and divide by
10 246 3450 fontspec: HASH(0x55c432e8f2f8), font: 5, size: 100 . ùõΩ
10 254 3424 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to get the
10 78 3543 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . total number of hubs. This is the theoretically lowest
10 78 3663 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . number of hubs possible.
10 53 3817 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We calculate the number of hubs for Magpie similar to
10 53 3960 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . baseline-2
10 93 3936 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . .
10 63 4056 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We show the CDF of total hubs for all baselines and opti-
10 53 4175 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . mized in Figure 7. First, we observe the importance of shar-
10 53 4295 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ing hubs across client metros:
10 179 4319 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . baseline-1
10 221 4295 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . does significantly
10 53 4414 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . worse than all other topologies. Second, we observe that
10 53 4534 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . both
10 75 4558 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . baseline-2
10 118 4534 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and Magpie
10 170 4558 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . optimized
10 213 4534 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . both do close to the
10 53 4653 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . optimal number of
10 131 4677 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . baseline-3
10 169 4653 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . . However, we found that Mag-
10 53 4773 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . pie‚Äôs topologies were smaller than
10 193 4797 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . baseline-2
10 234 4773 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . in 78% of cases
10 53 4916 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . Magpie can reduce the total number of minimum hubs to meet
10 53 5036 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . the SLO for many topologies.
10 63 5132 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We further analyze the reduction in hub sizes for different
10 53 5251 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topology sizes with
10 132 5275 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . baseline-1
10 173 5251 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . shown in Figure 8. On average,
10 53 5371 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . there is a reduction of about 25% across all the sizes. For every
10 53 5490 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . reduction, there is a reduction in the total cost involved. This
10 53 5610 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . shows that the same PoP can meet the SLO for multiple
10 53 5729 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . metros, and this might not always be the default PoP. There
10 53 5849 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is a benefit of price with such reductions overtime.
10 254 5873 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . This result
10 53 5992 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . indicates that Magpie can minimize the total hubs saving
10 53 6112 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . thousands of dollars in cost.
10 53 6345 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 6.4
10 81 6345 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Use of non-default PoPs
10 53 6479 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie picks non-default PoPs to achieve better latency. To
10 53 6599 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . understand how much this happens, we calculate percentage
10 53 6718 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of metros in each topology that switch from default to non
10 53 6838 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . default PoP. Figure 9 shows the average number of metros
10 53 6957 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . that switched for each topology. Across all sizes, the percent
10 317 867 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . varies from 38-45%.
10 402 891 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . Using non-default PoPs can frequently
10 318 1010 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . improve performance.
10 318 1154 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Summary
10 369 1130 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie not only achieves the requested SLOs,
10 318 1249 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . but also reduces topology size by an average of 25%, which
10 318 1369 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . reflects a direct cost savings of 25% to customers. On average,
10 318 1488 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie also reduces the weighted latency of virtual WAN
10 318 1608 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . deployments by 23%.
10 318 1855 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 7
10 336 1855 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . MAINTAINING VIRTUAL WANS
10 318 1990 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Once the placement for a topology has been decided by
10 318 2109 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie‚Äôs optimizer, the next step is maintaining it over time.
10 318 2229 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Maintenance includes deciding to add new hubs or migrate
10 318 2348 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . existing hubs to different locations, based on changing inter-
10 318 2468 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . domain latency. There is a cost associated with both adding
10 318 2587 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . an extra hub and moving an existing hub. We propose polices
10 318 2707 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . as a mechanism to for customers to decide how to update
10 318 2826 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . their Magpie-designed topologies over time. We first discuss
10 317 2946 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ways to maintain the cloud PoP assignment for an individual
10 318 3066 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . branch office (ß7.1) and then generalize the comparison for
10 318 3185 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the virtual WAN topologies generated by Magpie in ß6 (ß7.3).
10 318 3432 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 7.1
10 345 3432 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Policies
10 317 3567 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We present two policies for updating the cloud PoP allocated
10 318 3686 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to a client metro as new performance measurements become
10 318 3806 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . available over time.
10 318 3974 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Simple-Best.
10 379 3949 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is a greedy policy that selects the PoP with
10 318 4069 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the lowest latency observed in a given period of time. This
10 318 4189 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . policy
10 345 4212 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . switches
10 380 4189 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to a PoP that has the lowest latency over the
10 318 4308 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . period when the policy runs. In doing so, the policy ensures
10 318 4428 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . that the client metro to cloud PoP mapping is following the
10 318 4547 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . bleeding edge of latency changes. For example, if a metro
10 318 4667 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . has measurements for three unique PoPs that it connects to
10 318 4786 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . over a one-month period, the policy will select the PoP that
10 318 4906 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . provides the lowest latency in that period, contributing to the
10 318 5025 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hub migration cost of topology maintenance. Moreover, often
10 318 5145 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . latency on the Internet undergoes temporary fluctuations.
10 317 5264 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . And, Simple-Best ignores these effects by simply comparing
10 318 5384 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the data samples available in the time window.
10 317 5552 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Ttest-Best.
10 370 5528 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . To introduce statistical significance to the de-
10 318 5647 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cision of switching to a lower latency cloud PoP based on
10 318 5767 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . newly available performance measurements, we introduce
10 318 5886 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the ttest-best policy. We perform pairwise
10 496 5910 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . t-tests
10 523 5886 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . between
10 318 6006 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . each pair of cloud PoPs to decide where to change a metro‚Äôs
10 318 6125 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoP mapping. The t-test quantifies the difference between
10 318 6245 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the arithmetic means of any two independent distributions.
10 318 6365 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . It returns the calculated t-statistic and a p-value. The p-value
10 318 6484 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is the probability that an observed difference could have
10 318 6604 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . happened by chance. Low p-values indicate greater confi-
10 318 6723 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . dence in the observed difference of means,
10 494 6747 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . i.e.,
10 509 6723 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the data did
10 318 6843 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . not occur by chance. In our experiments, we set the p-value
10 318 6962 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . threshold to consider a t-test admissible to 5%. Once, we run
10 302 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 10
start
<page number="11" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="184.857051" left="161.394000" width="751.711107" height="13.688612" font="11">Intelligent virtualized wide-area network design with Magpie</text>
11 53 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Intelligent virtualized wide-area network design with Magpie
11 387 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Submitted for review to SIGCOMM,
11 539 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . 2022
11 53 867 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the pairwise t-test for all PoPs for a given metro, we calculate
11 53 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the partial ordering between the PoPs and return the PoP
11 53 1106 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . that offers the least latency. For some metros, this ordering
11 53 1225 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is incomplete. Hence for such cases, the policy fails to decide
11 53 1345 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . if a better PoP is available for the metro with the new data
11 53 1464 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . made available.
11 53 1711 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 7.2
11 81 1711 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . Switching Probabilities of Policies
11 89 3405 fontspec: HASH(0x55c432f43190), font: 44, size: 73 . 0.0
11 121 3405 fontspec: HASH(0x55c432f43190), font: 44, size: 73 . 0.1
11 152 3405 fontspec: HASH(0x55c432f43190), font: 44, size: 73 . 0.2
11 184 3405 fontspec: HASH(0x55c432f43190), font: 44, size: 73 . 0.3
11 215 3405 fontspec: HASH(0x55c432f43190), font: 44, size: 73 . 0.4
11 247 3405 fontspec: HASH(0x55c432f43190), font: 44, size: 73 . 0.5
11 158 3493 fontspec: HASH(0x55c432f43190), font: 44, size: 73 . Probability
11 78 3246 fontspec: HASH(0x55c432f43190), font: 44, size: 73 . 0.6
11 78 2978 fontspec: HASH(0x55c432f43190), font: 44, size: 73 . 0.7
11 78 2710 fontspec: HASH(0x55c432f43190), font: 44, size: 73 . 0.8
11 78 2442 fontspec: HASH(0x55c432f43190), font: 44, size: 73 . 0.9
11 78 2174 fontspec: HASH(0x55c432f43190), font: 44, size: 73 . 1.0
11 190 2909 fontspec: HASH(0x55c432f43430), font: 46, size: 53 . ttest-threshold
11 190 2982 fontspec: HASH(0x55c432f43430), font: 46, size: 53 . ttest-smoothing
11 190 3056 fontspec: HASH(0x55c432f43430), font: 46, size: 53 . ttest-no smoothing
11 190 3129 fontspec: HASH(0x55c432f43430), font: 46, size: 53 . simple best-threshold
11 190 3203 fontspec: HASH(0x55c432f43430), font: 46, size: 53 . simple best-smoothing
11 190 3276 fontspec: HASH(0x55c432f43430), font: 46, size: 53 . simple best-no smoothing
11 106 3608 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Figure 10: Switching probabilities
11 63 3730 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Next, we calculate the probability of switching from one
11 53 3850 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoP to another based on the policies discussed in ß7.1. The
11 53 3969 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . switching probabilities capture the likelihood that a policy
11 53 4089 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . would suggest changes to the virtual WAN topology. Ide-
11 53 4208 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ally, a policy should have low switching probabilities while
11 53 4328 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . sustaining the latency that Magpie‚Äôs optimizer provided
11 53 4447 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . originally. To each policy, we add a
11 203 4471 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . tempering mechanism
11 293 4447 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . .
11 53 4567 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The tempering mechanism prevents the policy from imme-
11 53 4686 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . diately acting upon the data. We analyze the management
11 53 4806 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . policies with the tempering mechanisms (
11 222 4830 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . smoothing
11 263 4806 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ,
11 267 4830 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . thresh-
11 53 4949 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . old
11 66 4926 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ) and without tempering (
11 172 4949 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . no smoothing
11 227 4926 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ). The switching
11 53 5045 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . probabilities are calculated for both the policies across these
11 53 5165 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . techniques. We calculate this on the four months of data that
11 53 5284 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . we used in the analysis in ß3.
11 63 5466 fontspec: HASH(0x55c432f49858), font: 47, size: 100 . 7.2.1
11 91 5466 fontspec: HASH(0x55c432f49858), font: 47, size: 100 . Smoothing.
11 140 5466 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . In this technique, we keep a sliding
11 53 5585 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . window of 7 days, increasing the window by one day. We
11 53 5705 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . run the topology management policies on 7 days of data and
11 53 5825 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . compare the link returned by the policy with the last 7 days
11 53 5944 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of data. For example, for window
11 197 5968 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . w
11 207 5944 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . we compare the PoP
11 53 6064 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . returned by the PoP of window
11 182 6088 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . w-1
11 197 6064 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . . If the the PoP returned
11 53 6183 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . by window,
11 102 6207 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . w
11 112 6183 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is different from the one returned by window
11 53 6327 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . w-1
11 68 6303 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . , the switch count is increased. Finally, the probability is
11 53 6422 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . calculated by dividing the total switch by the total window.
11 53 6542 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . If in any window,
11 133 6566 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . Ttest best
11 176 6542 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . fails to return a PoP due to
11 53 6661 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . insufficient samples, the switch is not increased.
11 63 6844 fontspec: HASH(0x55c432f49858), font: 47, size: 100 . 7.2.2
11 91 6844 fontspec: HASH(0x55c432f49858), font: 47, size: 100 . Threshold.
11 136 6843 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . For this technique, we run the policies
11 53 6963 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . every 24 hours. So, the window for this technique is 1 day. If
11 318 867 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the PoP picked by the policies in day
11 469 891 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . d
11 477 867 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is different from the
11 318 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . one in day
11 360 1010 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . d-1
11 372 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . , the % change in the latency is calculated. If the
11 318 1106 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . change is greater than a threshold, the switch is increased
11 318 1225 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and the link shifts to the new PoP. We use a default threshold
11 317 1345 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . value of 5% in our calculations. The switching probability is
11 318 1464 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . calculated similar to
11 402 1488 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . smoothing
11 443 1464 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . .
11 327 1899 fontspec: HASH(0x55c432f49858), font: 47, size: 100 . 7.2.3
11 355 1899 fontspec: HASH(0x55c432f49858), font: 47, size: 100 . No Smoothing.
11 417 1923 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . No smoothing
11 474 1899 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is same as
11 517 1923 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . smoothing
11 317 2018 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . with a window of 24 hours. The policies are run every, 24
11 318 2138 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hours and the switch happens if the PoP returned in day
11 544 2162 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . d
11 551 2138 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . is
11 318 2257 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . different from the previous day, i.e, day
11 478 2281 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . d-1
11 491 2257 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . . The calculation
11 318 2377 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for the switching probability is the same.
11 327 2497 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We show the CDF of all topology management policies
11 317 2616 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . with tempering techniques in Figure 10. We evaluate over
11 318 2736 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . median latencies. We observe that among all the combina-
11 318 2855 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tions, the
11 360 2879 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . simple best
11 409 2855 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for the
11 441 2879 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . no smoothing
11 499 2855 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . technique has
11 318 2975 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the highest switching probability for all the metros. For the
11 318 3118 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . smoothing
11 361 3094 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . case, about 90% of metros have lower probability
11 317 3214 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . with
11 338 3238 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . ttest best
11 376 3214 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . compared to
11 432 3238 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . simple best
11 476 3214 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . . Both,
11 505 3238 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . ttest best
11 543 3214 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and
11 318 3357 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . simple best
11 367 3333 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . have the lowest switching probability for the
11 318 3477 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . threshold
11 354 3453 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . .
11 327 3573 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . This data shows that the
11 433 3596 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . simple best
11 481 3573 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . with
11 503 3596 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . no smoothing
11 317 3692 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . will have the highest cost as the lowest latency changes
11 318 3812 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . frequently on a daily basis. On the other hand, the
11 522 3836 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . threshold
11 317 3931 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . with both the policies will have the lowest cost, and will also
11 318 4051 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . keep the latency within 5% of the best latency.
11 327 4170 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The cost of switching can serve as a driver for evolving
11 317 4290 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . virtualized WAN topologies. They provide the customers
11 318 4409 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . guide to quantify the cost of changing, and re-configuring
11 318 4529 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . their virtualized WAN networks. It addition to this, the policy
11 318 4648 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . picked PoPs can also serve as input for the optimizer if the
11 318 4768 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . customers choose to limit the choices to the policy picked
11 318 4888 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoPs only.
11 318 5387 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 7.3
11 345 5387 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . PoP movement
11 317 5521 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . We evaluate the changes in enterprise topologies generated
11 318 5641 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . by Magpie in ß6. We evaluate the changes suggested by
11 318 5760 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . topology management policies on enterprise topologies of
11 318 5880 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . size 5 (five branch offices). We show the CDF of switching
11 318 5999 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . probability of enterprise topologies in Figure 11. We observe
11 318 6119 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . that with using threshold-based tempering to decide when
11 318 6239 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to migrate hubs is most likely to minimize the number of
11 318 6358 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hub migrations while bounding latency degradation by the
11 318 6478 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . threshold of 5%. Of the policy and tempering techniques dis-
11 318 6597 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cussed in this section, we recommend enterprises to maintain
11 318 6717 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . their Magpie-optimized topologies using a latency threshold
11 318 6836 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for the lowest likelihood of hub migration.
11 302 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 11
start
<page number="12" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="184.857051" left="161.394000" width="443.086635" height="13.688612" font="11">Submitted for review to SIGCOMM,</text>
12 53 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Submitted for review to SIGCOMM,
12 206 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . 2022
12 530 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . X.et al.
12 91 2291 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 0.0
12 110 2291 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 0.5
12 130 2291 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 1.0
12 149 2291 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 1.5
12 169 2291 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 2.0
12 188 2291 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 2.5
12 208 2291 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 3.0
12 227 2291 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 3.5
12 247 2291 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 4.0
12 140 2379 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . Average PoP change
12 78 2174 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 0.2
12 78 2034 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 0.3
12 78 1895 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 0.4
12 78 1756 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 0.5
12 78 1617 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 0.6
12 78 1478 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 0.7
12 78 1339 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 0.8
12 78 1200 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 0.9
12 78 1061 fontspec: HASH(0x55c432f498d0), font: 48, size: 73 . 1.0
12 190 2016 fontspec: HASH(0x55c432f49960), font: 50, size: 53 . simple best-threshold
12 190 2089 fontspec: HASH(0x55c432f49960), font: 50, size: 53 . simple best-smoothing
12 190 2162 fontspec: HASH(0x55c432f49960), font: 50, size: 53 . simple best-no smoothing
12 53 2494 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . Figure 11: CDF of change in PoP compared with the policy
12 53 2604 fontspec: HASH(0x55c432e79c00), font: 7, size: 90 . PoP for topology of size 5.
12 53 2860 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 8
12 71 2860 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . DISCUSSION
12 53 2995 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . In this section, we identify the vehicle for Magpie‚Äôs adoption
12 53 3114 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . by enterprises or cloud providers. We then discuss alterna-
12 53 3234 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tive mechanisms that can resolve performance anomalies
12 53 3354 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . observed by enterprise virtual WANs today.
12 53 3541 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Adoption of Magpie by cloud networks.
12 236 3517 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . While Magpie
12 53 3637 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . can operate as a standalone tool for enterprises looking to
12 53 3756 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . design their virtual WAN deployments, we believe it can be
12 53 3876 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . integrated by cloud providers into their portals. For instance,
12 53 3995 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie can be integrated into Microsoft‚Äôs Azure portal [5]
12 53 4115 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to suggest enterprises how many virtual WANs should they
12 53 4235 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . spawn to meet their performance SLOs. This is similar to
12 53 4354 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . suggestions made by cloud providers when users spawn
12 53 4474 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . virtual machines today.
12 53 4661 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Interventions from cloud providers.
12 222 4637 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . An alternative to
12 53 4757 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . enterprise customers improving their virtual WAN perfor-
12 53 4876 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . mance through topology design is intervention by cloud
12 53 4996 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . providers when performance anomalies occur. The cloud
12 53 5115 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . provider in Figure 2 can use unicast to announce prefixes
12 53 5235 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for virtual WAN hubs. Unicast routing is more deterministic
12 53 5355 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and more likely to lead to predictable performance. However,
12 53 5474 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . since anycast allows cloud providers to load-balance across
12 53 5594 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . PoPs, split the burden of flash crowds and denial-of-service
12 53 5713 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . attacks, cloud providers prefer it over unicast.
12 53 5901 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Interventions from the ISP.
12 184 5877 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Today, when performance
12 53 5996 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . anomalies like the one in Figure 2 arise, enterprise customers
12 53 6116 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . open
12 76 6140 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . incidents
12 115 6116 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . with cloud providers. Cloud providers react
12 53 6235 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to these complaints by contacting operators in charge of the
12 53 6355 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . enterprise‚Äôs upstream ISP. Dialogue between the cloud and
12 53 6475 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . ISP operators can resolve the inflated latency issue if the ISP
12 53 6594 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . changes network configuration to route traffic to the closer
12 53 6714 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . point-of-presence. While this is the common-case resolution,
12 53 6833 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . it is time consuming and leads to lost revenue for both cloud
12 53 6953 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and enterprise clients.
12 318 882 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 9
12 336 882 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . RELATED WORK
12 318 1016 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . In this section, we discuss prior work on related to Magpie,
12 318 1136 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . and set them into context with our contributions.
12 318 1364 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Overlay networks.
12 404 1340 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . have been an active area of research [3,
12 317 1459 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . 12, 18]. This work has focussed on on designing overlay net-
12 317 1579 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . works to improve performance by recovering and re-routing
12 318 1698 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . packets in case of outrages or congestion. Instead, Magpie
12 318 1818 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . minimizes the latency of the packet outside the datacentres
12 318 1937 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . by placing hubs at locations that can meet the SLAs. Overlay
12 318 2057 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . networks also have different architectures for different appli-
12 318 2176 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cations and services such as content delivery networks, peer
12 318 2296 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . to peer communications
12 419 2320 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . etc.
12 437 2296 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . [9]. In contrast, virtual WANs
12 318 2416 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . are WAN-as-a-service offering.
12 318 2644 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . CDN replica selection.
12 423 2620 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Unlike performance-based selec-
12 318 2739 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tion of CDN replicas, cloud servers
12 471 2763 fontspec: HASH(0x55c432e17e28), font: 4, size: 100 . etc.
12 488 2739 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . , our focus is on
12 318 2859 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . designing virtualized WANs that are stable for extended pe-
12 318 2978 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . riods of time despite routing dynamics.
12 318 3206 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . Performance monitoring in WANs.
12 484 3182 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Magpie leverages
12 318 3302 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the dynamic latency measurements in its design to predict
12 318 3421 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the most suitable hub locations. Research [8, 20] has shown
12 318 3541 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . that collecting measurements from locations where clients
12 318 3660 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . are located can help in understanding the latency dynamics
12 318 3780 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of wide area networks. While other work [6] has shown that
12 318 3899 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . even though the internet performance is heterogeneous, sta-
12 318 4019 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tistical methods can be formulated to quantify the stability
12 318 4139 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of network performance. In Magpie we use the latency mea-
12 318 4258 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . surements to formulate an optimal way of deploying hubs
12 318 4378 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . for virtualized WAN topologies.
12 317 4606 fontspec: HASH(0x55c432e18c20), font: 8, size: 100 . WAN traffic engineering.
12 434 4582 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Cloud providers use software-
12 318 4701 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . defined centralized traffic engineering controllers to assign
12 318 4821 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . flow within their private WANs to maximize their utiliza-
12 318 4940 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . tion, guarantee fairness and prevent congestion [13, 15].
12 318 5060 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Bandwidth costs in the context of WANs were considered in
12 318 5179 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . Pretium [16] and Cascara [21]. Magpie‚Äôs cost optimization
12 318 5299 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . of virtual WANs solves a different objective with separate
12 318 5419 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . constraints. Recent work has proposed a software-defined
12 318 5538 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . edge to manage outbound flows from their networks [19, 27].
12 317 5658 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . The goal of these efforts is to react to poor client performance
12 318 5777 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . by switching to better performing BGP next hops.
12 318 6082 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . 10
12 342 6082 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . CONCLUSIONS
12 318 6216 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . In this work we first quantified the extent of latency inflation
12 318 6336 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . due to virtual WAN hub placement in a commercial cloud
12 318 6455 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . provider. We develop Magpie to design performance and
12 318 6575 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . cost optimal virtual WAN topologies. Magpie formulates
12 317 6694 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . virtual WAN design as a mixed integer linear program. Mag-
12 318 6814 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . pie-designed virtual WAN topologies can save upto 25% of
12 318 6934 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . the cost of virtual WAN deployments by placing fewer WAN
12 302 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 12
start
<page number="13" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="184.857051" left="161.394000" width="751.711107" height="13.688612" font="11">Intelligent virtualized wide-area network design with Magpie</text>
13 53 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Intelligent virtualized wide-area network design with Magpie
13 387 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Submitted for review to SIGCOMM,
13 539 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . 2022
13 53 867 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . hubs while achieving the same service-level objective. More-
13 53 986 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . over, Magpie-designed topologies reduce weighted latency
13 53 1106 fontspec: HASH(0x55c432e17e40), font: 3, size: 100 . by 23% for large enterprise clients.
13 302 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 13
start
<page number="14" position="absolute" top="0" left="0" height="2376" width="1836">
end
line variable matches text | image!!: 
<text top="184.857051" left="161.394000" width="443.086635" height="13.688612" font="11">Submitted for review to SIGCOMM,</text>
14 53 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . Submitted for review to SIGCOMM,
14 206 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . 2022
14 530 616 fontspec: HASH(0x55c432f345f8), font: 11, size: 100 . X.et al.
14 53 882 fontspec: HASH(0x55c432e17f00), font: 2, size: 120 . REFERENCES
14 57 1010 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [1] Akshay Agrawal, Robin Verschueren, Steven Diamond, and Stephen
14 70 1110 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Boyd. A rewriting system for convex optimization problems.
14 270 1129 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Journal
14 70 1229 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . of Control and Decision
14 144 1209 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , 5(1):42‚Äì60, 2018.
14 57 1309 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [2] David Andersen, Hari Balakrishnan, Frans Kaashoek, and Robert Mor-
14 70 1409 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . ris. Resilient overlay networks. In
14 183 1428 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Proceedings of the Eighteenth ACM
14 70 1527 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Symposium on Operating Systems Principles
14 211 1508 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , SOSP ‚Äô01, page 131‚Äì145,
14 70 1608 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . New York, NY, USA, 2001. Association for Computing Machinery.
14 57 1708 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [3] David Andersen, Hari Balakrishnan, Frans Kaashoek, and Robert Mor-
14 70 1807 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . ris. Resilient overlay networks.
14 173 1826 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . SIGOPS Oper. Syst. Rev.
14 246 1807 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , 35(5):131‚Äì145,
14 70 1907 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . October 2001.
14 57 2006 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [4] Aws cloud wan (preview), 2021. https://aws.amazon.com/cloud-wan/.
14 57 2106 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [5] Microsoft Azure. Microsoft azure portal, 2021. https://portal.azure.
14 70 2206 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . com/.
14 57 2305 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [6] Hari Balakrishnan, Mark Stemm, Srinivasan Seshan, and Randy H. Katz.
14 70 2405 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Analyzing stability in wide-area network performance.
14 252 2424 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . SIGMETRICS
14 70 2524 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Perform. Eval. Rev.
14 130 2505 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , 25(1):2‚Äì12, jun 1997.
14 57 2604 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [7] Matt Calder, Ashley Flavel, Ethan Katz-Bassett, Ratul Mahajan, and
14 70 2704 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Jitendra Padhye. Analyzing the performance of an anycast cdn. In
14 70 2823 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Proceedings of the 2015 Internet Measurement Conference
14 246 2803 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , IMC ‚Äô15, page
14 70 2903 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 531‚Äì537, New York, NY, USA, 2015. Association for Computing Ma-
14 70 3003 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . chinery.
14 57 3102 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [8] Matt Calder, Ryan Gao, Manuel Schrˆder, Ryan Stewart, Jitendra
14 70 3202 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Padhye, Ratul Mahajan, Ganesh Ananthanarayanan, and Ethan Katz-
14 70 3302 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Bassett. Odin: Microsoft‚Äôs scalable Fault-Tolerant CDN measurement
14 70 3401 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . system. In
14 106 3420 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . 15th USENIX Symposium on Networked Systems Design and
14 70 3520 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Implementation (NSDI 18)
14 156 3501 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , pages 501‚Äì517, Renton, WA, April 2018.
14 70 3600 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . USENIX Association.
14 57 3700 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [9] Dave Clark, Bill Lehr, Steven J. Bauer, Peyman Faratin, Rahul Sami,
14 70 3800 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . and John Wroclawski. Overlay networks and the future of the internet.
14 70 3918 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Communications & Strategies
14 164 3899 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , pages 109‚Äì129, 2006.
14 53 3999 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [10] Steven Diamond and Stephen Boyd. CVXPY: A Python-embedded mod-
14 70 4099 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . eling language for convex optimization.
14 202 4118 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Journal of Machine Learning
14 70 4217 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Research
14 98 4198 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , 17(83):1‚Äì5, 2016.
14 53 4298 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [11] Amazon ec2: Secure and resizable compute capacity for virtually any
14 70 4397 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . workload, 2021. https://aws.amazon.com/ec2/.
14 53 4497 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [12] J. Han, D. Watson, and F. Jahanian. Topology aware overlay networks.
14 70 4597 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . In
14 79 4616 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Proceedings IEEE 24th Annual Joint Conference of the IEEE Computer
14 70 4715 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . and Communications Societies.
14 166 4696 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , volume 4, pages 2554‚Äì2565 vol. 4, 2005.
14 53 4796 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [13] Chi-Yao Hong, Srikanth Kandula, Ratul Mahajan, Ming Zhang, Vi-
14 70 4896 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . jay Gill, Mohan Nanduri, and Roger Wattenhofer. Achieving high
14 70 4995 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . utilization with software-driven WAN. pages 15‚Äì26, August 2013.
14 53 5095 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [14] Introduction to iwan and pfrv3, 2021.
14 209 5095 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . https://www.cisco.com/c/
14 70 5194 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . en/us/support/docs/ios-nx-os-software/performance-routing-pfr/
14 70 5294 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 200281-Introduction-To-IWAN-And-PfRv3.html.
14 53 5394 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [15] Sushant Jain, Alok Kumar, Subhasree Mandal, Joon Ong, Leon
14 70 5493 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Poutievski, Arjun Singh, Subbaiah Venkata, Jim Wanderer, Junlan
14 70 5593 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Zhou, Min Zhu, Jonathan Zolla, Urs Hˆlzle, Stephen Stuart, and Amin
14 334 881 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Vahdat. B4: Experience with a globally-deployed software defined
14 334 980 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . WAN. pages 3‚Äì14, August 2013.
14 318 1080 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [16] Virajith Jalaparti, Ivan Bliznets, Srikanth Kandula, Brendan Lucier, and
14 335 1179 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Ishai Menache. Dynamic Pricing and Traffic Engineering for Timely
14 335 1279 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Inter-Datacenter Transfers. In
14 435 1298 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . SIGCOMM‚Äô16
14 478 1279 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , 2016.
14 318 1379 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [17] Magic wan, 2021. https://www.cloudflare.com/magic-wan/.
14 318 1478 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [18] Mukaddim Pathan, Ramesh K. Sitaraman, and Dom Robinson.
14 533 1498 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Overlay
14 335 1597 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Networks: An Akamai Perspective
14 441 1578 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , pages 305‚Äì328. 2014.
14 318 1678 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [19] Brandon Schlinker, Hyojeong Kim, Timothy Cui, Ethan Katz-Bassett,
14 335 1777 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Harsha V Madhyastha, Italo Cunha, James Quinn, Saif Hasan, Petr
14 335 1877 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Lapukhov, and Hongyi Zeng. Engineering egress with Edge Fabric:
14 335 1977 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Steering oceans of content to the world. In
14 468 1996 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Proceedings of the Conference
14 335 2078 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . of the ACM Special Interest Group on Data Communication
14 519 2059 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , pages 418‚Äì
14 334 2158 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 431. ACM, 2017.
14 318 2258 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [20] Sayandeep Sen, Jongwon Yoon, Joshua Hare, Justin Ormont, and
14 335 2357 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Suman Banerjee. Can they hear me now? a case for a client-assisted
14 335 2457 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . approach to monitoring wide-area wireless networks. In
14 521 2476 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Proceedings
14 335 2576 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . of the 2011 ACM SIGCOMM Conference on Internet Measurement Con-
14 335 2675 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . ference
14 357 2656 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , IMC ‚Äô11, page 99‚Äì116, New York, NY, USA, 2011. Association
14 335 2756 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . for Computing Machinery.
14 318 2856 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [21] Rachee Singh, Sharad Agarwal, Matt Calder, and Paramvir Bahl. Cost-
14 335 2955 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . effective cloud edge traffic engineering with cascara. In
14 517 2974 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . 18th USENIX
14 335 3074 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Symposium on Networked Systems Design and Implementation (NSDI
14 335 3174 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . 21)
14 344 3154 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , pages 201‚Äì216. USENIX Association, April 2021.
14 318 3254 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [22] Rachee Singh, Nikolaj Bjorner, Sharon Shoham, Yawei Yin, John
14 334 3354 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Arnold, and Jamie Gaudette. Cost-effective capacity provisioning
14 335 3453 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . in wide area networks with shoofly. In
14 465 3472 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Proceedings of the 2021 ACM
14 335 3572 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . SIGCOMM 2021 Conference
14 422 3553 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , SIGCOMM ‚Äô21, page 534‚Äì546, New York,
14 335 3653 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . NY, USA, 2021. Association for Computing Machinery.
14 318 3752 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [23] Rachee Singh, Manya Ghobadi, Klaus-Tycho Foerster, Mark Filer, and
14 335 3852 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Phillipa Gill. Radwan: Rate adaptive wide area network. In
14 532 3871 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Proceed-
14 335 3971 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . ings of the 2018 Conference of the ACM Special Interest Group on Data
14 335 4070 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . Communication
14 386 4051 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , SIGCOMM ‚Äô18, page 547‚Äì560, New York, NY, USA,
14 335 4151 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 2018. Association for Computing Machinery.
14 318 4250 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [24] Virtual wan, 2021.
14 414 4250 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . https://azure.microsoft.com/en-us/services/
14 334 4350 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . virtual-wan/.
14 318 4450 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [25] Virtual wan faq, 2022.
14 425 4450 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . https://docs.microsoft.com/en-us/azure/
14 334 4549 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . virtual-wan/virtual-wan-faq#.
14 318 4649 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [26] Virtual WAN Pricing, 2021. https://azure.microsoft.com/en-us/pricing/
14 335 4748 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . details/virtual-wan/#pricing.
14 318 4848 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . [27] KK Yap, Murtaza Motiwala, Jeremy Rahe, Steve Padgett, Matthew
14 335 4948 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Holliman, Gary Baldus, Marcus Hines, TaeEun Kim, Ashok Narayanan,
14 334 5047 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Ankur Jain, Victor Lin, Colin Rice, Brian Rogan, Arjun Singh, Bert
14 334 5147 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Tanaka, Manish Verma, Puneet Sood, Mukarram Tariq, Matt Tierney,
14 335 5247 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Dzevad Trumic, Vytautas Valancius, Calvin Ying, Mahesh Kallahalla,
14 335 5346 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Bikash Koley, and Amin Vahdat. Taking the Edge off with Espresso:
14 335 5446 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . Scale, Reliability and Programmability for Global Internet Peering. In
14 335 5565 fontspec: HASH(0x55c432f49f30), font: 51, size: 80 . SIGCOMM‚Äô17
14 378 5545 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . , 2017.
14 302 7097 fontspec: HASH(0x55c432f34460), font: 10, size: 80 . 14
start
<outline>
end
../anjali.pdf
Paper size: 8.50in x 11.00in
Text region: 7.04in x 8.94in
Margins: 0.74in x 0.72in x 0.86in x 1.20in (l/r/t/b)
Body font size: 10.00pt
Leading: 12.0pt
Columns: 2
Pages: 14

Page 1:
  text region: 7.04in x 8.57in
  margins: 0.74in x 0.72in x 1.23in x 1.21in (l/r/t/b)
  body font: 10pt
  leading: 12pt
  columns: 2
  type: body
  nchars: 4235
Page 2:
  text region: 7.04in x 8.94in
  margins: 0.74in x 0.72in x 0.86in x 1.20in (l/r/t/b)
  body font: 10pt
  leading: 12pt
  columns: 2
  type: body
  nchars: 4625
Page 3:
  text region: 7.03in x 8.92in
  margins: 0.74in x 0.72in x 0.86in x 1.22in (l/r/t/b)
  body font: 10pt
  leading: 12pt
  columns: 2
  type: body
  nchars: 5660
Page 4:
  text region: 7.03in x 8.94in
  margins: 0.74in x 0.72in x 0.86in x 1.20in (l/r/t/b)
  body font: 10pt
  leading: 12pt
  columns: 2
  type: body
  nchars: 5457
Page 5:
  text region: 7.03in x 8.91in
  margins: 0.74in x 0.72in x 0.86in x 1.23in (l/r/t/b)
  body font: 10pt
  leading: 12pt
  columns: 2
  type: body
  nchars: 4040
Page 6:
  text region: 7.03in x 8.94in
  margins: 0.74in x 0.72in x 0.86in x 1.20in (l/r/t/b)
  body font: 10pt
  leading: 12pt
  columns: 2
  type: body
  nchars: 4767
Page 7:
  text region: 7.03in x 8.94in
  margins: 0.74in x 0.72in x 0.86in x 1.21in (l/r/t/b)
  body font: 10pt
  leading: 12pt
  columns: 3
  type: body
  nchars: 3982
Page 8:
  text region: 7.03in x 8.94in
  margins: 0.74in x 0.72in x 0.86in x 1.20in (l/r/t/b)
  body font: 10pt
  leading: 12pt
  columns: 2
  type: body
  nchars: 5110
Page 9:
  text region: 7.03in x 8.94in
  margins: 0.75in x 0.72in x 0.86in x 1.20in (l/r/t/b)
  body font: 10pt
  leading: 12pt
  columns: 2
  type: body
  nchars: 2763
Page 10:
  text region: 7.03in x 8.94in
  margins: 0.75in x 0.72in x 0.86in x 1.20in (l/r/t/b)
  body font: 10pt
  leading: 12pt
  columns: 2
  type: body
  nchars: 4702
Page 11:
  text region: 7.02in x 8.94in
  margins: 0.74in x 0.74in x 0.86in x 1.20in (l/r/t/b)
  body font: 10pt
  leading: 11.9pt
  columns: 2
  type: body
  nchars: 4482
Page 12:
  text region: 7.03in x 8.93in
  margins: 0.75in x 0.72in x 0.86in x 1.21in (l/r/t/b)
  body font: 10pt
  leading: 12pt
  columns: 2
  type: body
  nchars: 4478
Page 13:
  text region: 6.68in x 0.81in
  margins: 0.75in x 1.07in x 0.86in x 9.33in (l/r/t/b)
  body font: 10pt
  leading: 11.9pt
  columns: 1
  type: figure
  nchars: 254
Page 14:
  text region: 7.02in x 7.02in
  margins: 0.75in x 0.73in x 0.86in x 3.13in (l/r/t/b)
  body font: 0pt
  leading: 10pt
  columns: 2
  type: bib
  nchars: 5739
